//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IMIC.OnlineDB
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class eTrainingOnlineEntities : DbContext
    {
        //public eTrainingOnlineEntities()
        //    : base("name=eTrainingOnlineEntities")
        //{
        //}
        public eTrainingOnlineEntities(string obj)
            : base(obj)
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<SP_Student_GetOnlineStudentFromLast3days_Result> SP_Student_GetOnlineStudentFromLast3days()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Student_GetOnlineStudentFromLast3days_Result>("SP_Student_GetOnlineStudentFromLast3days");
        }
    
        public virtual int SP_Student_InsertIntoOnlineServerfromWebWithoutId(string firstName, string lastName, string fullName, Nullable<int> sex, Nullable<System.DateTime> dateBirthday, string mobile, string email, string address, Nullable<System.DateTime> dateCreate, Nullable<System.DateTime> dateLastUpdate, string description, Nullable<int> courseId, Nullable<int> statusId, Nullable<int> userId)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var sexParameter = sex.HasValue ?
                new ObjectParameter("Sex", sex) :
                new ObjectParameter("Sex", typeof(int));
    
            var dateBirthdayParameter = dateBirthday.HasValue ?
                new ObjectParameter("DateBirthday", dateBirthday) :
                new ObjectParameter("DateBirthday", typeof(System.DateTime));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var dateCreateParameter = dateCreate.HasValue ?
                new ObjectParameter("DateCreate", dateCreate) :
                new ObjectParameter("DateCreate", typeof(System.DateTime));
    
            var dateLastUpdateParameter = dateLastUpdate.HasValue ?
                new ObjectParameter("DateLastUpdate", dateLastUpdate) :
                new ObjectParameter("DateLastUpdate", typeof(System.DateTime));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("CourseId", courseId) :
                new ObjectParameter("CourseId", typeof(int));
    
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Student_InsertIntoOnlineServerfromWebWithoutId", firstNameParameter, lastNameParameter, fullNameParameter, sexParameter, dateBirthdayParameter, mobileParameter, emailParameter, addressParameter, dateCreateParameter, dateLastUpdateParameter, descriptionParameter, courseIdParameter, statusIdParameter, userIdParameter);
        }
    }
}
