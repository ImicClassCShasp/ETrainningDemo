//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IMIC.DATAACCESSLAYERS
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TrainingCenterEntities : DbContext
    {
        public TrainingCenterEntities(string sValue)
            : base(sValue)
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<GetListEmployees_Result> GetListEmployees()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetListEmployees_Result>("GetListEmployees");
        }
    
        public virtual ObjectResult<GetListStudents_Result> GetListStudents()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetListStudents_Result>("GetListStudents");
        }
    
        public virtual ObjectResult<GetLoaiHocVienDatatable_Result> GetLoaiHocVienDatatable()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLoaiHocVienDatatable_Result>("GetLoaiHocVienDatatable");
        }
    
        public virtual ObjectResult<GetTaskSendMail_Result> GetTaskSendMail()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTaskSendMail_Result>("GetTaskSendMail");
        }
    
        public virtual ObjectResult<GetTinhTrangChamSocDatatable_Result> GetTinhTrangChamSocDatatable()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTinhTrangChamSocDatatable_Result>("GetTinhTrangChamSocDatatable");
        }
    
        public virtual ObjectResult<SP_CHECK_LOGIN_Result> SP_CHECK_LOGIN(string username, string password)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_CHECK_LOGIN_Result>("SP_CHECK_LOGIN", usernameParameter, passwordParameter);
        }
    
        public virtual int SP_DELETE_ANSWERS_BYID(Nullable<long> aID, Nullable<long> qID)
        {
            var aIDParameter = aID.HasValue ?
                new ObjectParameter("AID", aID) :
                new ObjectParameter("AID", typeof(long));
    
            var qIDParameter = qID.HasValue ?
                new ObjectParameter("QID", qID) :
                new ObjectParameter("QID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DELETE_ANSWERS_BYID", aIDParameter, qIDParameter);
        }
    
        public virtual int SP_DELETE_QUESTION_BYID(Nullable<long> qID)
        {
            var qIDParameter = qID.HasValue ?
                new ObjectParameter("QID", qID) :
                new ObjectParameter("QID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DELETE_QUESTION_BYID", qIDParameter);
        }
    
        public virtual int SP_DeleteQCYOUTUBE(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DeleteQCYOUTUBE", idParameter);
        }
    
        public virtual int SP_DeleteQuangCao(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DeleteQuangCao", idParameter);
        }
    
        public virtual ObjectResult<SP_DET_DIENDAN_TOP_500_ROWS_Result> SP_DET_DIENDAN_TOP_500_ROWS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DET_DIENDAN_TOP_500_ROWS_Result>("SP_DET_DIENDAN_TOP_500_ROWS");
        }
    
        public virtual ObjectResult<SP_Get_All_Student_Detail_Result> SP_Get_All_Student_Detail(string dateFrom, string dateTo)
        {
            var dateFromParameter = dateFrom != null ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(string));
    
            var dateToParameter = dateTo != null ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Get_All_Student_Detail_Result>("SP_Get_All_Student_Detail", dateFromParameter, dateToParameter);
        }
    
        public virtual ObjectResult<SP_Get_All_Student_Detail_Money_Result> SP_Get_All_Student_Detail_Money(string dateFrom, string dateTo)
        {
            var dateFromParameter = dateFrom != null ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(string));
    
            var dateToParameter = dateTo != null ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Get_All_Student_Detail_Money_Result>("SP_Get_All_Student_Detail_Money", dateFromParameter, dateToParameter);
        }
    
        public virtual ObjectResult<SP_GET_ANSWERS_Result> SP_GET_ANSWERS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_ANSWERS_Result>("SP_GET_ANSWERS");
        }
    
        public virtual ObjectResult<SP_GET_ANSWERS_BY_ALL_Result> SP_GET_ANSWERS_BY_ALL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_ANSWERS_BY_ALL_Result>("SP_GET_ANSWERS_BY_ALL");
        }
    
        public virtual ObjectResult<SP_GET_ANSWERS_BY_ID_Result> SP_GET_ANSWERS_BY_ID(Nullable<long> qID)
        {
            var qIDParameter = qID.HasValue ?
                new ObjectParameter("QID", qID) :
                new ObjectParameter("QID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_ANSWERS_BY_ID_Result>("SP_GET_ANSWERS_BY_ID", qIDParameter);
        }
    
        public virtual ObjectResult<SP_GET_CLASSES_BY_EXPERTID_Result> SP_GET_CLASSES_BY_EXPERTID(Nullable<int> expertId)
        {
            var expertIdParameter = expertId.HasValue ?
                new ObjectParameter("ExpertId", expertId) :
                new ObjectParameter("ExpertId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_CLASSES_BY_EXPERTID_Result>("SP_GET_CLASSES_BY_EXPERTID", expertIdParameter);
        }
    
        public virtual ObjectResult<SP_Get_LoaiHocVien_Result> SP_Get_LoaiHocVien()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Get_LoaiHocVien_Result>("SP_Get_LoaiHocVien");
        }
    
        public virtual ObjectResult<SP_GET_QUESTIONS_Result> SP_GET_QUESTIONS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_QUESTIONS_Result>("SP_GET_QUESTIONS");
        }
    
        public virtual ObjectResult<SP_GET_QUESTIONS_ALL_Result> SP_GET_QUESTIONS_ALL()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GET_QUESTIONS_ALL_Result>("SP_GET_QUESTIONS_ALL");
        }
    
        public virtual ObjectResult<SP_Get_Student_All_Result> SP_Get_Student_All(string dateFrom, string dateTo)
        {
            var dateFromParameter = dateFrom != null ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(string));
    
            var dateToParameter = dateTo != null ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Get_Student_All_Result>("SP_Get_Student_All", dateFromParameter, dateToParameter);
        }
    
        public virtual ObjectResult<SP_Get_Student_All_Money_Result> SP_Get_Student_All_Money(string dateFrom, string dateTo)
        {
            var dateFromParameter = dateFrom != null ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(string));
    
            var dateToParameter = dateTo != null ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Get_Student_All_Money_Result>("SP_Get_Student_All_Money", dateFromParameter, dateToParameter);
        }
    
        public virtual ObjectResult<SP_GetEmailPassword_Result> SP_GetEmailPassword(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetEmailPassword_Result>("SP_GetEmailPassword", userIdParameter);
        }
    
        public virtual ObjectResult<SP_GETIMICQUANGCAO_Result> SP_GETIMICQUANGCAO(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GETIMICQUANGCAO_Result>("SP_GETIMICQUANGCAO", userIDParameter);
        }
    
        public virtual ObjectResult<SP_GETIMICQUANGCAODATETIME_Result> SP_GETIMICQUANGCAODATETIME(Nullable<int> userID, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GETIMICQUANGCAODATETIME_Result>("SP_GETIMICQUANGCAODATETIME", userIDParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<SP_GETIMICYOUTUBE_Result> SP_GETIMICYOUTUBE(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GETIMICYOUTUBE_Result>("SP_GETIMICYOUTUBE", userIDParameter);
        }
    
        public virtual ObjectResult<SP_GETIMICYOUTUBEDATETIME_Result> SP_GETIMICYOUTUBEDATETIME(Nullable<int> userID, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GETIMICYOUTUBEDATETIME_Result>("SP_GETIMICYOUTUBEDATETIME", userIDParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<SP_GETUSERINFO_Result> SP_GETUSERINFO()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GETUSERINFO_Result>("SP_GETUSERINFO");
        }
    
        public virtual ObjectResult<SP_HienThi_DanhSach_HocVien_By03Month_Result> SP_HienThi_DanhSach_HocVien_By03Month()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_HienThi_DanhSach_HocVien_By03Month_Result>("SP_HienThi_DanhSach_HocVien_By03Month");
        }
    
        public virtual ObjectResult<SP_HienThi_DanhSach_HocVien_ByTimes_Result> SP_HienThi_DanhSach_HocVien_ByTimes(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_HienThi_DanhSach_HocVien_ByTimes_Result>("SP_HienThi_DanhSach_HocVien_ByTimes", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<SP_HOCVIEN_TIEMNANG_Result> SP_HOCVIEN_TIEMNANG()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_HOCVIEN_TIEMNANG_Result>("SP_HOCVIEN_TIEMNANG");
        }
    
        public virtual int SP_INSERT_ANSWERS_BY_ID(Nullable<long> qID, string answers, Nullable<long> accept, Nullable<byte> status, Nullable<int> createBy, string steps)
        {
            var qIDParameter = qID.HasValue ?
                new ObjectParameter("QID", qID) :
                new ObjectParameter("QID", typeof(long));
    
            var answersParameter = answers != null ?
                new ObjectParameter("Answers", answers) :
                new ObjectParameter("Answers", typeof(string));
    
            var acceptParameter = accept.HasValue ?
                new ObjectParameter("Accept", accept) :
                new ObjectParameter("Accept", typeof(long));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(byte));
    
            var createByParameter = createBy.HasValue ?
                new ObjectParameter("CreateBy", createBy) :
                new ObjectParameter("CreateBy", typeof(int));
    
            var stepsParameter = steps != null ?
                new ObjectParameter("Steps", steps) :
                new ObjectParameter("Steps", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_ANSWERS_BY_ID", qIDParameter, answersParameter, acceptParameter, statusParameter, createByParameter, stepsParameter);
        }
    
        public virtual int SP_INSERT_QUESTIONS(string questions, Nullable<byte> status)
        {
            var questionsParameter = questions != null ?
                new ObjectParameter("Questions", questions) :
                new ObjectParameter("Questions", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_QUESTIONS", questionsParameter, statusParameter);
        }
    
        public virtual int SP_INSERT_SCHEDULE(Nullable<int> classId, Nullable<int> teacherId, string contents, Nullable<System.DateTime> createDate, Nullable<bool> status)
        {
            var classIdParameter = classId.HasValue ?
                new ObjectParameter("ClassId", classId) :
                new ObjectParameter("ClassId", typeof(int));
    
            var teacherIdParameter = teacherId.HasValue ?
                new ObjectParameter("TeacherId", teacherId) :
                new ObjectParameter("TeacherId", typeof(int));
    
            var contentsParameter = contents != null ?
                new ObjectParameter("Contents", contents) :
                new ObjectParameter("Contents", typeof(string));
    
            var createDateParameter = createDate.HasValue ?
                new ObjectParameter("CreateDate", createDate) :
                new ObjectParameter("CreateDate", typeof(System.DateTime));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_SCHEDULE", classIdParameter, teacherIdParameter, contentsParameter, createDateParameter, statusParameter);
        }
    
        public virtual int SP_INSERT_STUDENT_BY_ID(string firtname, string lastname, string fullname, string email, string mobile, Nullable<byte> status, Nullable<byte> courseid)
        {
            var firtnameParameter = firtname != null ?
                new ObjectParameter("firtname", firtname) :
                new ObjectParameter("firtname", typeof(string));
    
            var lastnameParameter = lastname != null ?
                new ObjectParameter("lastname", lastname) :
                new ObjectParameter("lastname", typeof(string));
    
            var fullnameParameter = fullname != null ?
                new ObjectParameter("fullname", fullname) :
                new ObjectParameter("fullname", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("mobile", mobile) :
                new ObjectParameter("mobile", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(byte));
    
            var courseidParameter = courseid.HasValue ?
                new ObjectParameter("courseid", courseid) :
                new ObjectParameter("courseid", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_STUDENT_BY_ID", firtnameParameter, lastnameParameter, fullnameParameter, emailParameter, mobileParameter, statusParameter, courseidParameter);
        }
    
        public virtual int SP_INSERTUPDATE_QC(Nullable<int> id, string tieude, string link, string keyword, string user, string pass, Nullable<System.DateTime> ngayNhap, Nullable<int> authodid, Nullable<int> fLAG)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var tieudeParameter = tieude != null ?
                new ObjectParameter("tieude", tieude) :
                new ObjectParameter("tieude", typeof(string));
    
            var linkParameter = link != null ?
                new ObjectParameter("link", link) :
                new ObjectParameter("link", typeof(string));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("keyword", keyword) :
                new ObjectParameter("keyword", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("pass", pass) :
                new ObjectParameter("pass", typeof(string));
    
            var ngayNhapParameter = ngayNhap.HasValue ?
                new ObjectParameter("NgayNhap", ngayNhap) :
                new ObjectParameter("NgayNhap", typeof(System.DateTime));
    
            var authodidParameter = authodid.HasValue ?
                new ObjectParameter("authodid", authodid) :
                new ObjectParameter("authodid", typeof(int));
    
            var fLAGParameter = fLAG.HasValue ?
                new ObjectParameter("FLAG", fLAG) :
                new ObjectParameter("FLAG", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERTUPDATE_QC", idParameter, tieudeParameter, linkParameter, keywordParameter, userParameter, passParameter, ngayNhapParameter, authodidParameter, fLAGParameter);
        }
    
        public virtual int SP_INSERTUPDATEYOUTUBE_QC(Nullable<int> id, string tieude, string link, string user, string pass, Nullable<System.DateTime> ngayNhap, Nullable<int> userId, Nullable<int> fLAG)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var tieudeParameter = tieude != null ?
                new ObjectParameter("tieude", tieude) :
                new ObjectParameter("tieude", typeof(string));
    
            var linkParameter = link != null ?
                new ObjectParameter("link", link) :
                new ObjectParameter("link", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("pass", pass) :
                new ObjectParameter("pass", typeof(string));
    
            var ngayNhapParameter = ngayNhap.HasValue ?
                new ObjectParameter("NgayNhap", ngayNhap) :
                new ObjectParameter("NgayNhap", typeof(System.DateTime));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var fLAGParameter = fLAG.HasValue ?
                new ObjectParameter("FLAG", fLAG) :
                new ObjectParameter("FLAG", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERTUPDATEYOUTUBE_QC", idParameter, tieudeParameter, linkParameter, userParameter, passParameter, ngayNhapParameter, userIdParameter, fLAGParameter);
        }
    
        public virtual int SP_KIEMTRA_HOCVIEN_TIEMNANG(Nullable<int> sTUDENTID)
        {
            var sTUDENTIDParameter = sTUDENTID.HasValue ?
                new ObjectParameter("STUDENTID", sTUDENTID) :
                new ObjectParameter("STUDENTID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_KIEMTRA_HOCVIEN_TIEMNANG", sTUDENTIDParameter);
        }
    
        public virtual ObjectResult<SP_LoadKhoaHocInfo_Result> SP_LoadKhoaHocInfo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_LoadKhoaHocInfo_Result>("SP_LoadKhoaHocInfo");
        }
    
        public virtual ObjectResult<SP_SCHEDULE_BY_TEACHERID_Result> SP_SCHEDULE_BY_TEACHERID(Nullable<int> teacherId)
        {
            var teacherIdParameter = teacherId.HasValue ?
                new ObjectParameter("TeacherId", teacherId) :
                new ObjectParameter("TeacherId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SCHEDULE_BY_TEACHERID_Result>("SP_SCHEDULE_BY_TEACHERID", teacherIdParameter);
        }
    
        public virtual ObjectResult<SP_Student_getall_Result> SP_Student_getall()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Student_getall_Result>("SP_Student_getall");
        }
    
        public virtual ObjectResult<SP_Student_GetOfflineStudentFromLast3days_Result> SP_Student_GetOfflineStudentFromLast3days()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Student_GetOfflineStudentFromLast3days_Result>("SP_Student_GetOfflineStudentFromLast3days");
        }
    
        public virtual ObjectResult<SP_Student_GetOnlineStudentFromLast3days_Result> SP_Student_GetOnlineStudentFromLast3days()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Student_GetOnlineStudentFromLast3days_Result>("SP_Student_GetOnlineStudentFromLast3days");
        }
    
        public virtual ObjectResult<SP_Student_GetStudentFromLast3days_Result> SP_Student_GetStudentFromLast3days()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Student_GetStudentFromLast3days_Result>("SP_Student_GetStudentFromLast3days");
        }
    
        public virtual int SP_Student_InsertIntoOfflineServerfromWebWithoutId(string firstName, string lastName, string fullName, Nullable<int> sex, Nullable<System.DateTime> dateBirthday, string mobile, string email, string address, Nullable<System.DateTime> dateCreate, Nullable<System.DateTime> dateLastUpdate, string description, Nullable<int> courseId, Nullable<int> statusId, Nullable<int> userId)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var sexParameter = sex.HasValue ?
                new ObjectParameter("Sex", sex) :
                new ObjectParameter("Sex", typeof(int));
    
            var dateBirthdayParameter = dateBirthday.HasValue ?
                new ObjectParameter("DateBirthday", dateBirthday) :
                new ObjectParameter("DateBirthday", typeof(System.DateTime));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var dateCreateParameter = dateCreate.HasValue ?
                new ObjectParameter("DateCreate", dateCreate) :
                new ObjectParameter("DateCreate", typeof(System.DateTime));
    
            var dateLastUpdateParameter = dateLastUpdate.HasValue ?
                new ObjectParameter("DateLastUpdate", dateLastUpdate) :
                new ObjectParameter("DateLastUpdate", typeof(System.DateTime));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("CourseId", courseId) :
                new ObjectParameter("CourseId", typeof(int));
    
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Student_InsertIntoOfflineServerfromWebWithoutId", firstNameParameter, lastNameParameter, fullNameParameter, sexParameter, dateBirthdayParameter, mobileParameter, emailParameter, addressParameter, dateCreateParameter, dateLastUpdateParameter, descriptionParameter, courseIdParameter, statusIdParameter, userIdParameter);
        }
    
        public virtual int SP_Student_InsertIntoOfflineServerSync(Nullable<int> id, string firstName, string lastName, string fullName, Nullable<int> sex, Nullable<System.DateTime> dateBirthday, string mobile, string email, string address, Nullable<System.DateTime> dateCreate, Nullable<System.DateTime> dateLastUpdate, string description, Nullable<int> courseId, Nullable<int> statusId, Nullable<int> userId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var sexParameter = sex.HasValue ?
                new ObjectParameter("Sex", sex) :
                new ObjectParameter("Sex", typeof(int));
    
            var dateBirthdayParameter = dateBirthday.HasValue ?
                new ObjectParameter("DateBirthday", dateBirthday) :
                new ObjectParameter("DateBirthday", typeof(System.DateTime));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var dateCreateParameter = dateCreate.HasValue ?
                new ObjectParameter("DateCreate", dateCreate) :
                new ObjectParameter("DateCreate", typeof(System.DateTime));
    
            var dateLastUpdateParameter = dateLastUpdate.HasValue ?
                new ObjectParameter("DateLastUpdate", dateLastUpdate) :
                new ObjectParameter("DateLastUpdate", typeof(System.DateTime));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("CourseId", courseId) :
                new ObjectParameter("CourseId", typeof(int));
    
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Student_InsertIntoOfflineServerSync", idParameter, firstNameParameter, lastNameParameter, fullNameParameter, sexParameter, dateBirthdayParameter, mobileParameter, emailParameter, addressParameter, dateCreateParameter, dateLastUpdateParameter, descriptionParameter, courseIdParameter, statusIdParameter, userIdParameter);
        }
    
        public virtual int SP_Student_InsertIntoOfflineServerSyncWithoutId(string firstName, string lastName, string fullName, Nullable<int> sex, Nullable<System.DateTime> dateBirthday, string mobile, string email, string address, Nullable<System.DateTime> dateCreate, Nullable<System.DateTime> dateLastUpdate, string description, Nullable<int> courseId, Nullable<int> statusId, Nullable<int> userId)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var sexParameter = sex.HasValue ?
                new ObjectParameter("Sex", sex) :
                new ObjectParameter("Sex", typeof(int));
    
            var dateBirthdayParameter = dateBirthday.HasValue ?
                new ObjectParameter("DateBirthday", dateBirthday) :
                new ObjectParameter("DateBirthday", typeof(System.DateTime));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var dateCreateParameter = dateCreate.HasValue ?
                new ObjectParameter("DateCreate", dateCreate) :
                new ObjectParameter("DateCreate", typeof(System.DateTime));
    
            var dateLastUpdateParameter = dateLastUpdate.HasValue ?
                new ObjectParameter("DateLastUpdate", dateLastUpdate) :
                new ObjectParameter("DateLastUpdate", typeof(System.DateTime));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("CourseId", courseId) :
                new ObjectParameter("CourseId", typeof(int));
    
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Student_InsertIntoOfflineServerSyncWithoutId", firstNameParameter, lastNameParameter, fullNameParameter, sexParameter, dateBirthdayParameter, mobileParameter, emailParameter, addressParameter, dateCreateParameter, dateLastUpdateParameter, descriptionParameter, courseIdParameter, statusIdParameter, userIdParameter);
        }
    
        public virtual int SP_Student_InsertIntoOnlineServerfromWebWithoutId(string firstName, string lastName, string fullName, Nullable<int> sex, Nullable<System.DateTime> dateBirthday, string mobile, string email, string address, Nullable<System.DateTime> dateCreate, Nullable<System.DateTime> dateLastUpdate, string description, Nullable<int> courseId, Nullable<int> statusId, Nullable<int> userId)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var sexParameter = sex.HasValue ?
                new ObjectParameter("Sex", sex) :
                new ObjectParameter("Sex", typeof(int));
    
            var dateBirthdayParameter = dateBirthday.HasValue ?
                new ObjectParameter("DateBirthday", dateBirthday) :
                new ObjectParameter("DateBirthday", typeof(System.DateTime));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var dateCreateParameter = dateCreate.HasValue ?
                new ObjectParameter("DateCreate", dateCreate) :
                new ObjectParameter("DateCreate", typeof(System.DateTime));
    
            var dateLastUpdateParameter = dateLastUpdate.HasValue ?
                new ObjectParameter("DateLastUpdate", dateLastUpdate) :
                new ObjectParameter("DateLastUpdate", typeof(System.DateTime));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("CourseId", courseId) :
                new ObjectParameter("CourseId", typeof(int));
    
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Student_InsertIntoOnlineServerfromWebWithoutId", firstNameParameter, lastNameParameter, fullNameParameter, sexParameter, dateBirthdayParameter, mobileParameter, emailParameter, addressParameter, dateCreateParameter, dateLastUpdateParameter, descriptionParameter, courseIdParameter, statusIdParameter, userIdParameter);
        }
    
        public virtual int SP_Student_Update_EmailPassword_by_id(Nullable<long> id, string email, string mobile)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Student_Update_EmailPassword_by_id", idParameter, emailParameter, mobileParameter);
        }
    
        public virtual ObjectResult<SP_StudentSyc_GetStudentFromLast3days_Result> SP_StudentSyc_GetStudentFromLast3days()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_StudentSyc_GetStudentFromLast3days_Result>("SP_StudentSyc_GetStudentFromLast3days");
        }
    
        public virtual ObjectResult<SP_StudentSyc_StudentFromLast3days_Result> SP_StudentSyc_StudentFromLast3days()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_StudentSyc_StudentFromLast3days_Result>("SP_StudentSyc_StudentFromLast3days");
        }
    
        public virtual int SP_StudentSync_DeleteAfterSync(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_StudentSync_DeleteAfterSync", idParameter);
        }
    
        public virtual int SP_StudentSync_InsertFromOnline(Nullable<int> id, string firstName, string lastName, string fullName, Nullable<int> sex, Nullable<System.DateTime> dateBirthday, string mobile, string email, string address, Nullable<System.DateTime> dateCreate, Nullable<System.DateTime> dateLastUpdate, string description, Nullable<int> courseId, Nullable<int> statusId, Nullable<int> userId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var sexParameter = sex.HasValue ?
                new ObjectParameter("Sex", sex) :
                new ObjectParameter("Sex", typeof(int));
    
            var dateBirthdayParameter = dateBirthday.HasValue ?
                new ObjectParameter("DateBirthday", dateBirthday) :
                new ObjectParameter("DateBirthday", typeof(System.DateTime));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var dateCreateParameter = dateCreate.HasValue ?
                new ObjectParameter("DateCreate", dateCreate) :
                new ObjectParameter("DateCreate", typeof(System.DateTime));
    
            var dateLastUpdateParameter = dateLastUpdate.HasValue ?
                new ObjectParameter("DateLastUpdate", dateLastUpdate) :
                new ObjectParameter("DateLastUpdate", typeof(System.DateTime));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("CourseId", courseId) :
                new ObjectParameter("CourseId", typeof(int));
    
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_StudentSync_InsertFromOnline", idParameter, firstNameParameter, lastNameParameter, fullNameParameter, sexParameter, dateBirthdayParameter, mobileParameter, emailParameter, addressParameter, dateCreateParameter, dateLastUpdateParameter, descriptionParameter, courseIdParameter, statusIdParameter, userIdParameter);
        }
    
        public virtual int SP_THEMHV_TIEMNANG(Nullable<int> studentId, string contents, Nullable<byte> status)
        {
            var studentIdParameter = studentId.HasValue ?
                new ObjectParameter("StudentId", studentId) :
                new ObjectParameter("StudentId", typeof(int));
    
            var contentsParameter = contents != null ?
                new ObjectParameter("Contents", contents) :
                new ObjectParameter("Contents", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_THEMHV_TIEMNANG", studentIdParameter, contentsParameter, statusParameter);
        }
    
        public virtual ObjectResult<SP_TIMKIEM_ANSWERS_BY_ALL_Result> SP_TIMKIEM_ANSWERS_BY_ALL(string noiDung, Nullable<long> qID)
        {
            var noiDungParameter = noiDung != null ?
                new ObjectParameter("NoiDung", noiDung) :
                new ObjectParameter("NoiDung", typeof(string));
    
            var qIDParameter = qID.HasValue ?
                new ObjectParameter("QID", qID) :
                new ObjectParameter("QID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_TIMKIEM_ANSWERS_BY_ALL_Result>("SP_TIMKIEM_ANSWERS_BY_ALL", noiDungParameter, qIDParameter);
        }
    
        public virtual ObjectResult<SP_TIMKIEM_ANSWERS_BY_NoiDung_Result> SP_TIMKIEM_ANSWERS_BY_NoiDung(string noiDung)
        {
            var noiDungParameter = noiDung != null ?
                new ObjectParameter("NoiDung", noiDung) :
                new ObjectParameter("NoiDung", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_TIMKIEM_ANSWERS_BY_NoiDung_Result>("SP_TIMKIEM_ANSWERS_BY_NoiDung", noiDungParameter);
        }
    
        public virtual ObjectResult<SP_TIMKIEM_ANSWERS_BY_QID_Result> SP_TIMKIEM_ANSWERS_BY_QID(Nullable<long> qID)
        {
            var qIDParameter = qID.HasValue ?
                new ObjectParameter("QID", qID) :
                new ObjectParameter("QID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_TIMKIEM_ANSWERS_BY_QID_Result>("SP_TIMKIEM_ANSWERS_BY_QID", qIDParameter);
        }
    
        public virtual ObjectResult<SP_TimKiemThongTin_Result> SP_TimKiemThongTin(Nullable<int> userId, string link, string title)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            var linkParameter = link != null ?
                new ObjectParameter("link", link) :
                new ObjectParameter("link", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("title", title) :
                new ObjectParameter("title", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_TimKiemThongTin_Result>("SP_TimKiemThongTin", userIdParameter, linkParameter, titleParameter);
        }
    
        public virtual int SP_UPDATE_ANSWERS_BY_ID(Nullable<long> aID, Nullable<long> qID, string answers, Nullable<long> accept, Nullable<byte> status, string steps)
        {
            var aIDParameter = aID.HasValue ?
                new ObjectParameter("AID", aID) :
                new ObjectParameter("AID", typeof(long));
    
            var qIDParameter = qID.HasValue ?
                new ObjectParameter("QID", qID) :
                new ObjectParameter("QID", typeof(long));
    
            var answersParameter = answers != null ?
                new ObjectParameter("Answers", answers) :
                new ObjectParameter("Answers", typeof(string));
    
            var acceptParameter = accept.HasValue ?
                new ObjectParameter("Accept", accept) :
                new ObjectParameter("Accept", typeof(long));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(byte));
    
            var stepsParameter = steps != null ?
                new ObjectParameter("Steps", steps) :
                new ObjectParameter("Steps", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UPDATE_ANSWERS_BY_ID", aIDParameter, qIDParameter, answersParameter, acceptParameter, statusParameter, stepsParameter);
        }
    
        public virtual int SP_UPDATE_HOCVIEN_TIEMNANG(Nullable<int> studentId, string contents, Nullable<byte> status)
        {
            var studentIdParameter = studentId.HasValue ?
                new ObjectParameter("StudentId", studentId) :
                new ObjectParameter("StudentId", typeof(int));
    
            var contentsParameter = contents != null ?
                new ObjectParameter("Contents", contents) :
                new ObjectParameter("Contents", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UPDATE_HOCVIEN_TIEMNANG", studentIdParameter, contentsParameter, statusParameter);
        }
    
        public virtual int SP_UPDATE_QUESTIONS(Nullable<long> qID, string questions, Nullable<byte> status)
        {
            var qIDParameter = qID.HasValue ?
                new ObjectParameter("QID", qID) :
                new ObjectParameter("QID", typeof(long));
    
            var questionsParameter = questions != null ?
                new ObjectParameter("Questions", questions) :
                new ObjectParameter("Questions", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UPDATE_QUESTIONS", qIDParameter, questionsParameter, statusParameter);
        }
    
        public virtual int SP_UPDATE_SCHEDULES(Nullable<int> id, Nullable<int> classId, Nullable<int> teacherId, string contents, Nullable<bool> status)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var classIdParameter = classId.HasValue ?
                new ObjectParameter("ClassId", classId) :
                new ObjectParameter("ClassId", typeof(int));
    
            var teacherIdParameter = teacherId.HasValue ?
                new ObjectParameter("TeacherId", teacherId) :
                new ObjectParameter("TeacherId", typeof(int));
    
            var contentsParameter = contents != null ?
                new ObjectParameter("Contents", contents) :
                new ObjectParameter("Contents", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UPDATE_SCHEDULES", idParameter, classIdParameter, teacherIdParameter, contentsParameter, statusParameter);
        }
    
        public virtual ObjectResult<SP_UPDATEMIC_Result> SP_UPDATEMIC()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_UPDATEMIC_Result>("SP_UPDATEMIC");
        }
    
        public virtual int SP_UPDATEMIC2(Nullable<int> id, string keyword)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("keyword", keyword) :
                new ObjectParameter("keyword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UPDATEMIC2", idParameter, keywordParameter);
        }
    
        public virtual ObjectResult<TimKiem_HocVien_TiemNang_Result> TimKiem_HocVien_TiemNang(string tuNgay, string denNgay, Nullable<int> courseId)
        {
            var tuNgayParameter = tuNgay != null ?
                new ObjectParameter("TuNgay", tuNgay) :
                new ObjectParameter("TuNgay", typeof(string));
    
            var denNgayParameter = denNgay != null ?
                new ObjectParameter("DenNgay", denNgay) :
                new ObjectParameter("DenNgay", typeof(string));
    
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("CourseId", courseId) :
                new ObjectParameter("CourseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TimKiem_HocVien_TiemNang_Result>("TimKiem_HocVien_TiemNang", tuNgayParameter, denNgayParameter, courseIdParameter);
        }
    
        public virtual ObjectResult<SP_IMIC_CheckLogin_Result> SP_IMIC_CheckLogin(string userName, string passWord)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passWordParameter = passWord != null ?
                new ObjectParameter("PassWord", passWord) :
                new ObjectParameter("PassWord", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_IMIC_CheckLogin_Result>("SP_IMIC_CheckLogin", userNameParameter, passWordParameter);
        }
    
        public virtual ObjectResult<SP_IMIC_Get_Course_Result> SP_IMIC_Get_Course()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_IMIC_Get_Course_Result>("SP_IMIC_Get_Course");
        }
    
        public virtual ObjectResult<SP_IMIC_Get_Status_Result> SP_IMIC_Get_Status()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_IMIC_Get_Status_Result>("SP_IMIC_Get_Status");
        }
    
        public virtual ObjectResult<SP_HienThi_DanhSach_HocVien_ById_Result> SP_HienThi_DanhSach_HocVien_ById(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_HienThi_DanhSach_HocVien_ById_Result>("SP_HienThi_DanhSach_HocVien_ById", idParameter);
        }
    
        public virtual int SP_Insert_Update_Student(Nullable<byte> flag, Nullable<long> id, string firtName, string lastName, string fullName, Nullable<int> sex, string mobile, Nullable<System.DateTime> dateBirthday, string email, string address, Nullable<System.DateTime> dateCreate, Nullable<long> userId, Nullable<long> courseid, Nullable<int> statusId, string description)
        {
            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(byte));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var firtNameParameter = firtName != null ?
                new ObjectParameter("FirtName", firtName) :
                new ObjectParameter("FirtName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var sexParameter = sex.HasValue ?
                new ObjectParameter("Sex", sex) :
                new ObjectParameter("Sex", typeof(int));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var dateBirthdayParameter = dateBirthday.HasValue ?
                new ObjectParameter("DateBirthday", dateBirthday) :
                new ObjectParameter("DateBirthday", typeof(System.DateTime));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var dateCreateParameter = dateCreate.HasValue ?
                new ObjectParameter("DateCreate", dateCreate) :
                new ObjectParameter("DateCreate", typeof(System.DateTime));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var courseidParameter = courseid.HasValue ?
                new ObjectParameter("courseid", courseid) :
                new ObjectParameter("courseid", typeof(long));
    
            var statusIdParameter = statusId.HasValue ?
                new ObjectParameter("StatusId", statusId) :
                new ObjectParameter("StatusId", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Insert_Update_Student", flagParameter, idParameter, firtNameParameter, lastNameParameter, fullNameParameter, sexParameter, mobileParameter, dateBirthdayParameter, emailParameter, addressParameter, dateCreateParameter, userIdParameter, courseidParameter, statusIdParameter, descriptionParameter);
        }
    
        public virtual ObjectResult<SP_IMIC_Check_RegisterByTime_Result> SP_IMIC_Check_RegisterByTime()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_IMIC_Check_RegisterByTime_Result>("SP_IMIC_Check_RegisterByTime");
        }
    
        public virtual int SP_IMIC_Delete_Student(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_IMIC_Delete_Student", idParameter);
        }
    
        public virtual ObjectResult<SP_IMIC_Comment_Support_ByStudentId_Result> SP_IMIC_Comment_Support_ByStudentId(Nullable<long> studentId)
        {
            var studentIdParameter = studentId.HasValue ?
                new ObjectParameter("StudentId", studentId) :
                new ObjectParameter("StudentId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_IMIC_Comment_Support_ByStudentId_Result>("SP_IMIC_Comment_Support_ByStudentId", studentIdParameter);
        }
    
        public virtual ObjectResult<SP_IMIC_InsertUpdateComment_Support_Result> SP_IMIC_InsertUpdateComment_Support(Nullable<byte> flag, Nullable<long> id, string commentName, string description, Nullable<long> userId, string userName, Nullable<long> studentId)
        {
            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(byte));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var commentNameParameter = commentName != null ?
                new ObjectParameter("CommentName", commentName) :
                new ObjectParameter("CommentName", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var studentIdParameter = studentId.HasValue ?
                new ObjectParameter("StudentId", studentId) :
                new ObjectParameter("StudentId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_IMIC_InsertUpdateComment_Support_Result>("SP_IMIC_InsertUpdateComment_Support", flagParameter, idParameter, commentNameParameter, descriptionParameter, userIdParameter, userNameParameter, studentIdParameter);
        }
    
        public virtual int SP_IMIC_Delete_Comment_Support(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_IMIC_Delete_Comment_Support", idParameter);
        }
    
        public virtual ObjectResult<SP_IMIC_Student_Register_Offline_ByTimes_Result> SP_IMIC_Student_Register_Offline_ByTimes(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_IMIC_Student_Register_Offline_ByTimes_Result>("SP_IMIC_Student_Register_Offline_ByTimes", startDateParameter, endDateParameter);
        }
    
        public virtual int SP_IMIC_Insert_StudentRegisterOnline(string registerDetailId, string fullName, string email, string phone, string address, string message, Nullable<System.DateTime> createdTime, string userName, Nullable<System.DateTime> updateDateTime)
        {
            var registerDetailIdParameter = registerDetailId != null ?
                new ObjectParameter("RegisterDetailId", registerDetailId) :
                new ObjectParameter("RegisterDetailId", typeof(string));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var messageParameter = message != null ?
                new ObjectParameter("Message", message) :
                new ObjectParameter("Message", typeof(string));
    
            var createdTimeParameter = createdTime.HasValue ?
                new ObjectParameter("CreatedTime", createdTime) :
                new ObjectParameter("CreatedTime", typeof(System.DateTime));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var updateDateTimeParameter = updateDateTime.HasValue ?
                new ObjectParameter("UpdateDateTime", updateDateTime) :
                new ObjectParameter("UpdateDateTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_IMIC_Insert_StudentRegisterOnline", registerDetailIdParameter, fullNameParameter, emailParameter, phoneParameter, addressParameter, messageParameter, createdTimeParameter, userNameParameter, updateDateTimeParameter);
        }
    
        public virtual ObjectResult<SP_IMIC_Get_Class_By_Year_Result> SP_IMIC_Get_Class_By_Year()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_IMIC_Get_Class_By_Year_Result>("SP_IMIC_Get_Class_By_Year");
        }
    
        public virtual int SP_Insert_And_Update_Class(Nullable<long> id, string className, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate, string placeTraining, Nullable<int> numberOfStudent, string description, string status)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var classNameParameter = className != null ?
                new ObjectParameter("ClassName", className) :
                new ObjectParameter("ClassName", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            var placeTrainingParameter = placeTraining != null ?
                new ObjectParameter("PlaceTraining", placeTraining) :
                new ObjectParameter("PlaceTraining", typeof(string));
    
            var numberOfStudentParameter = numberOfStudent.HasValue ?
                new ObjectParameter("NumberOfStudent", numberOfStudent) :
                new ObjectParameter("NumberOfStudent", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Insert_And_Update_Class", idParameter, classNameParameter, fromDateParameter, toDateParameter, placeTrainingParameter, numberOfStudentParameter, descriptionParameter, statusParameter);
        }
    
        public virtual ObjectResult<SP_IMIC_Get_Classes_Detailt_Of_Student_Result> SP_IMIC_Get_Classes_Detailt_Of_Student(Nullable<long> classId)
        {
            var classIdParameter = classId.HasValue ?
                new ObjectParameter("ClassId", classId) :
                new ObjectParameter("ClassId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_IMIC_Get_Classes_Detailt_Of_Student_Result>("SP_IMIC_Get_Classes_Detailt_Of_Student", classIdParameter);
        }
    
        public virtual int SP_IMIC_Insert_Student_Of_Classes(Nullable<long> classId, Nullable<long> studentId, string description)
        {
            var classIdParameter = classId.HasValue ?
                new ObjectParameter("ClassId", classId) :
                new ObjectParameter("ClassId", typeof(long));
    
            var studentIdParameter = studentId.HasValue ?
                new ObjectParameter("StudentId", studentId) :
                new ObjectParameter("StudentId", typeof(long));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_IMIC_Insert_Student_Of_Classes", classIdParameter, studentIdParameter, descriptionParameter);
        }
    
        public virtual int SP_Delete_Student_Class_By_Id(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Delete_Student_Class_By_Id", idParameter);
        }
    
        public virtual ObjectResult<SP_IMIC_Get_ExpertInfo_All_Result> SP_IMIC_Get_ExpertInfo_All()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_IMIC_Get_ExpertInfo_All_Result>("SP_IMIC_Get_ExpertInfo_All");
        }
    
        public virtual int SP_IMIC_Update_Expert_Info_Encrypt(Nullable<long> id, string email, string mobile)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_IMIC_Update_Expert_Info_Encrypt", idParameter, emailParameter, mobileParameter);
        }
    
        public virtual int SP_IMIC_Add_Expert_Into_Classes(Nullable<long> id, Nullable<long> expertId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var expertIdParameter = expertId.HasValue ?
                new ObjectParameter("ExpertId", expertId) :
                new ObjectParameter("ExpertId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_IMIC_Add_Expert_Into_Classes", idParameter, expertIdParameter);
        }
    
        public virtual ObjectResult<SP_IMIC_Get_List_Student_Of_Classes_Result> SP_IMIC_Get_List_Student_Of_Classes(Nullable<long> classId)
        {
            var classIdParameter = classId.HasValue ?
                new ObjectParameter("ClassId", classId) :
                new ObjectParameter("ClassId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_IMIC_Get_List_Student_Of_Classes_Result>("SP_IMIC_Get_List_Student_Of_Classes", classIdParameter);
        }
    
        public virtual ObjectResult<SP_GETALL_USER_Result> SP_GETALL_USER()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GETALL_USER_Result>("SP_GETALL_USER");
        }
    
        public virtual int SP_INSERT_USER(string userName, string firstName, string lastName, Nullable<bool> isSuperUser, string phone, string email, string displayName, string pASSWORD, Nullable<bool> updatePassword, string lastIPAddress, Nullable<bool> isDeleted, Nullable<int> createdByUserId, Nullable<System.DateTime> createOnDate, Nullable<int> lastModifiedByUserId, Nullable<System.DateTime> lastModifiedOnDate, Nullable<int> viewOrder, string aDDRESS, Nullable<int> ouId, Nullable<int> sex, Nullable<int> employeeId, Nullable<int> isExpertId)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var isSuperUserParameter = isSuperUser.HasValue ?
                new ObjectParameter("IsSuperUser", isSuperUser) :
                new ObjectParameter("IsSuperUser", typeof(bool));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var displayNameParameter = displayName != null ?
                new ObjectParameter("DisplayName", displayName) :
                new ObjectParameter("DisplayName", typeof(string));
    
            var pASSWORDParameter = pASSWORD != null ?
                new ObjectParameter("PASSWORD", pASSWORD) :
                new ObjectParameter("PASSWORD", typeof(string));
    
            var updatePasswordParameter = updatePassword.HasValue ?
                new ObjectParameter("UpdatePassword", updatePassword) :
                new ObjectParameter("UpdatePassword", typeof(bool));
    
            var lastIPAddressParameter = lastIPAddress != null ?
                new ObjectParameter("LastIPAddress", lastIPAddress) :
                new ObjectParameter("LastIPAddress", typeof(string));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("IsDeleted", isDeleted) :
                new ObjectParameter("IsDeleted", typeof(bool));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            var createOnDateParameter = createOnDate.HasValue ?
                new ObjectParameter("CreateOnDate", createOnDate) :
                new ObjectParameter("CreateOnDate", typeof(System.DateTime));
    
            var lastModifiedByUserIdParameter = lastModifiedByUserId.HasValue ?
                new ObjectParameter("LastModifiedByUserId", lastModifiedByUserId) :
                new ObjectParameter("LastModifiedByUserId", typeof(int));
    
            var lastModifiedOnDateParameter = lastModifiedOnDate.HasValue ?
                new ObjectParameter("LastModifiedOnDate", lastModifiedOnDate) :
                new ObjectParameter("LastModifiedOnDate", typeof(System.DateTime));
    
            var viewOrderParameter = viewOrder.HasValue ?
                new ObjectParameter("ViewOrder", viewOrder) :
                new ObjectParameter("ViewOrder", typeof(int));
    
            var aDDRESSParameter = aDDRESS != null ?
                new ObjectParameter("ADDRESS", aDDRESS) :
                new ObjectParameter("ADDRESS", typeof(string));
    
            var ouIdParameter = ouId.HasValue ?
                new ObjectParameter("OuId", ouId) :
                new ObjectParameter("OuId", typeof(int));
    
            var sexParameter = sex.HasValue ?
                new ObjectParameter("Sex", sex) :
                new ObjectParameter("Sex", typeof(int));
    
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var isExpertIdParameter = isExpertId.HasValue ?
                new ObjectParameter("isExpertId", isExpertId) :
                new ObjectParameter("isExpertId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_USER", userNameParameter, firstNameParameter, lastNameParameter, isSuperUserParameter, phoneParameter, emailParameter, displayNameParameter, pASSWORDParameter, updatePasswordParameter, lastIPAddressParameter, isDeletedParameter, createdByUserIdParameter, createOnDateParameter, lastModifiedByUserIdParameter, lastModifiedOnDateParameter, viewOrderParameter, aDDRESSParameter, ouIdParameter, sexParameter, employeeIdParameter, isExpertIdParameter);
        }
    
        public virtual int SP_DELETE_USER(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DELETE_USER", idParameter);
        }
    
        public virtual int SP_UPDATE_USER(Nullable<int> userId, string userName, string firstName, string lastName, Nullable<bool> isSuperUser, string phone, string email, string displayName, string pASSWORD, Nullable<bool> updatePassword, string lastIPAddress, Nullable<bool> isDeleted, Nullable<int> createdByUserId, Nullable<System.DateTime> createOnDate, Nullable<int> lastModifiedByUserId, Nullable<System.DateTime> lastModifiedOnDate, Nullable<int> viewOrder, string aDDRESS, Nullable<int> ouId, Nullable<int> sex, Nullable<int> employeeId, Nullable<int> isExpertId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var isSuperUserParameter = isSuperUser.HasValue ?
                new ObjectParameter("IsSuperUser", isSuperUser) :
                new ObjectParameter("IsSuperUser", typeof(bool));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var displayNameParameter = displayName != null ?
                new ObjectParameter("DisplayName", displayName) :
                new ObjectParameter("DisplayName", typeof(string));
    
            var pASSWORDParameter = pASSWORD != null ?
                new ObjectParameter("PASSWORD", pASSWORD) :
                new ObjectParameter("PASSWORD", typeof(string));
    
            var updatePasswordParameter = updatePassword.HasValue ?
                new ObjectParameter("UpdatePassword", updatePassword) :
                new ObjectParameter("UpdatePassword", typeof(bool));
    
            var lastIPAddressParameter = lastIPAddress != null ?
                new ObjectParameter("LastIPAddress", lastIPAddress) :
                new ObjectParameter("LastIPAddress", typeof(string));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("IsDeleted", isDeleted) :
                new ObjectParameter("IsDeleted", typeof(bool));
    
            var createdByUserIdParameter = createdByUserId.HasValue ?
                new ObjectParameter("CreatedByUserId", createdByUserId) :
                new ObjectParameter("CreatedByUserId", typeof(int));
    
            var createOnDateParameter = createOnDate.HasValue ?
                new ObjectParameter("CreateOnDate", createOnDate) :
                new ObjectParameter("CreateOnDate", typeof(System.DateTime));
    
            var lastModifiedByUserIdParameter = lastModifiedByUserId.HasValue ?
                new ObjectParameter("LastModifiedByUserId", lastModifiedByUserId) :
                new ObjectParameter("LastModifiedByUserId", typeof(int));
    
            var lastModifiedOnDateParameter = lastModifiedOnDate.HasValue ?
                new ObjectParameter("LastModifiedOnDate", lastModifiedOnDate) :
                new ObjectParameter("LastModifiedOnDate", typeof(System.DateTime));
    
            var viewOrderParameter = viewOrder.HasValue ?
                new ObjectParameter("ViewOrder", viewOrder) :
                new ObjectParameter("ViewOrder", typeof(int));
    
            var aDDRESSParameter = aDDRESS != null ?
                new ObjectParameter("ADDRESS", aDDRESS) :
                new ObjectParameter("ADDRESS", typeof(string));
    
            var ouIdParameter = ouId.HasValue ?
                new ObjectParameter("OuId", ouId) :
                new ObjectParameter("OuId", typeof(int));
    
            var sexParameter = sex.HasValue ?
                new ObjectParameter("Sex", sex) :
                new ObjectParameter("Sex", typeof(int));
    
            var employeeIdParameter = employeeId.HasValue ?
                new ObjectParameter("EmployeeId", employeeId) :
                new ObjectParameter("EmployeeId", typeof(int));
    
            var isExpertIdParameter = isExpertId.HasValue ?
                new ObjectParameter("isExpertId", isExpertId) :
                new ObjectParameter("isExpertId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UPDATE_USER", userIdParameter, userNameParameter, firstNameParameter, lastNameParameter, isSuperUserParameter, phoneParameter, emailParameter, displayNameParameter, pASSWORDParameter, updatePasswordParameter, lastIPAddressParameter, isDeletedParameter, createdByUserIdParameter, createOnDateParameter, lastModifiedByUserIdParameter, lastModifiedOnDateParameter, viewOrderParameter, aDDRESSParameter, ouIdParameter, sexParameter, employeeIdParameter, isExpertIdParameter);
        }
    
        public virtual ObjectResult<SP_GetElement_USER_Result> SP_GetElement_USER(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetElement_USER_Result>("SP_GetElement_USER", userIdParameter);
        }
    
        public virtual ObjectResult<SP_GETELEMENTBYID_USER_Result> SP_GETELEMENTBYID_USER(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GETELEMENTBYID_USER_Result>("SP_GETELEMENTBYID_USER", userIdParameter);
        }
    
        public virtual int SP_UPDATEPASSWORD_USER(Nullable<int> userId, string newPass)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var newPassParameter = newPass != null ?
                new ObjectParameter("NewPass", newPass) :
                new ObjectParameter("NewPass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UPDATEPASSWORD_USER", userIdParameter, newPassParameter);
        }
    
        public virtual ObjectResult<SP_GETELEMENTS_BYDATE_STUDENTS_Result> SP_GETELEMENTS_BYDATE_STUDENTS(string begin, string end)
        {
            var beginParameter = begin != null ?
                new ObjectParameter("begin", begin) :
                new ObjectParameter("begin", typeof(string));
    
            var endParameter = end != null ?
                new ObjectParameter("end", end) :
                new ObjectParameter("end", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GETELEMENTS_BYDATE_STUDENTS_Result>("SP_GETELEMENTS_BYDATE_STUDENTS", beginParameter, endParameter);
        }
    
        public virtual ObjectResult<SP_GetComment_Support_ByStudentId_Result> SP_GetComment_Support_ByStudentId(Nullable<int> idStudent)
        {
            var idStudentParameter = idStudent.HasValue ?
                new ObjectParameter("idStudent", idStudent) :
                new ObjectParameter("idStudent", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetComment_Support_ByStudentId_Result>("SP_GetComment_Support_ByStudentId", idStudentParameter);
        }
    
        public virtual ObjectResult<SP_GETALL_COURSE_Result> SP_GETALL_COURSE()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GETALL_COURSE_Result>("SP_GETALL_COURSE");
        }
    
        public virtual int SP_INSERTUPDATE_COMMENTSUPPORT(Nullable<int> flag, Nullable<int> id, string commentName, string desription, Nullable<int> userId, string userName, Nullable<int> studentId, Nullable<System.DateTime> dateCreate)
        {
            var flagParameter = flag.HasValue ?
                new ObjectParameter("flag", flag) :
                new ObjectParameter("flag", typeof(int));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var commentNameParameter = commentName != null ?
                new ObjectParameter("CommentName", commentName) :
                new ObjectParameter("CommentName", typeof(string));
    
            var desriptionParameter = desription != null ?
                new ObjectParameter("Desription", desription) :
                new ObjectParameter("Desription", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var studentIdParameter = studentId.HasValue ?
                new ObjectParameter("StudentId", studentId) :
                new ObjectParameter("StudentId", typeof(int));
    
            var dateCreateParameter = dateCreate.HasValue ?
                new ObjectParameter("DateCreate", dateCreate) :
                new ObjectParameter("DateCreate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERTUPDATE_COMMENTSUPPORT", flagParameter, idParameter, commentNameParameter, desriptionParameter, userIdParameter, userNameParameter, studentIdParameter, dateCreateParameter);
        }
    
        public virtual ObjectResult<SP_GETELEMENTSBYIDSTUDENT_COMMONTSUPPORT_Result> SP_GETELEMENTSBYIDSTUDENT_COMMONTSUPPORT(Nullable<int> idStudent)
        {
            var idStudentParameter = idStudent.HasValue ?
                new ObjectParameter("idStudent", idStudent) :
                new ObjectParameter("idStudent", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GETELEMENTSBYIDSTUDENT_COMMONTSUPPORT_Result>("SP_GETELEMENTSBYIDSTUDENT_COMMONTSUPPORT", idStudentParameter);
        }
    
        public virtual int SP_DELETE_COMMENT_SUPPORT(Nullable<int> idComment)
        {
            var idCommentParameter = idComment.HasValue ?
                new ObjectParameter("idComment", idComment) :
                new ObjectParameter("idComment", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DELETE_COMMENT_SUPPORT", idCommentParameter);
        }
    
        public virtual ObjectResult<SP_GETHOCPHI_BYSTUDENTID_STUDENT_CLASS_Result> SP_GETHOCPHI_BYSTUDENTID_STUDENT_CLASS(Nullable<int> idStd)
        {
            var idStdParameter = idStd.HasValue ?
                new ObjectParameter("idStd", idStd) :
                new ObjectParameter("idStd", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GETHOCPHI_BYSTUDENTID_STUDENT_CLASS_Result>("SP_GETHOCPHI_BYSTUDENTID_STUDENT_CLASS", idStdParameter);
        }
    
        public virtual ObjectResult<SP_GetAll_Employees_Result> SP_GetAll_Employees()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetAll_Employees_Result>("SP_GetAll_Employees");
        }
    
        public virtual ObjectResult<SP_GetAll_ChucVu_Result> SP_GetAll_ChucVu()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetAll_ChucVu_Result>("SP_GetAll_ChucVu");
        }
    
        public virtual ObjectResult<SP_GetAll_PhongBan_Result> SP_GetAll_PhongBan()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetAll_PhongBan_Result>("SP_GetAll_PhongBan");
        }
    
        public virtual ObjectResult<SP_GetAll_TrungTam_Result> SP_GetAll_TrungTam()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetAll_TrungTam_Result>("SP_GetAll_TrungTam");
        }
    
        public virtual int SP_Creat_Employees(string employeeName, Nullable<int> sex, Nullable<System.DateTime> dateBirhday, string mobile, string phone, string email, string universityName, string address, string identityNumber, Nullable<System.DateTime> dateOfIssue, string placeOfIssue, string placeBirthday, string personalTaxCode, string description, Nullable<int> orderNumber, Nullable<System.DateTime> dateCreate, Nullable<System.DateTime> dateLastUpdate, Nullable<System.DateTime> dateRegister, Nullable<int> jobTitleId, Nullable<int> centerId, Nullable<int> ouId, string employeeCV)
        {
            var employeeNameParameter = employeeName != null ?
                new ObjectParameter("EmployeeName", employeeName) :
                new ObjectParameter("EmployeeName", typeof(string));
    
            var sexParameter = sex.HasValue ?
                new ObjectParameter("Sex", sex) :
                new ObjectParameter("Sex", typeof(int));
    
            var dateBirhdayParameter = dateBirhday.HasValue ?
                new ObjectParameter("DateBirhday", dateBirhday) :
                new ObjectParameter("DateBirhday", typeof(System.DateTime));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var universityNameParameter = universityName != null ?
                new ObjectParameter("UniversityName", universityName) :
                new ObjectParameter("UniversityName", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var identityNumberParameter = identityNumber != null ?
                new ObjectParameter("IdentityNumber", identityNumber) :
                new ObjectParameter("IdentityNumber", typeof(string));
    
            var dateOfIssueParameter = dateOfIssue.HasValue ?
                new ObjectParameter("DateOfIssue", dateOfIssue) :
                new ObjectParameter("DateOfIssue", typeof(System.DateTime));
    
            var placeOfIssueParameter = placeOfIssue != null ?
                new ObjectParameter("PlaceOfIssue", placeOfIssue) :
                new ObjectParameter("PlaceOfIssue", typeof(string));
    
            var placeBirthdayParameter = placeBirthday != null ?
                new ObjectParameter("PlaceBirthday", placeBirthday) :
                new ObjectParameter("PlaceBirthday", typeof(string));
    
            var personalTaxCodeParameter = personalTaxCode != null ?
                new ObjectParameter("PersonalTaxCode", personalTaxCode) :
                new ObjectParameter("PersonalTaxCode", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var orderNumberParameter = orderNumber.HasValue ?
                new ObjectParameter("OrderNumber", orderNumber) :
                new ObjectParameter("OrderNumber", typeof(int));
    
            var dateCreateParameter = dateCreate.HasValue ?
                new ObjectParameter("DateCreate", dateCreate) :
                new ObjectParameter("DateCreate", typeof(System.DateTime));
    
            var dateLastUpdateParameter = dateLastUpdate.HasValue ?
                new ObjectParameter("DateLastUpdate", dateLastUpdate) :
                new ObjectParameter("DateLastUpdate", typeof(System.DateTime));
    
            var dateRegisterParameter = dateRegister.HasValue ?
                new ObjectParameter("DateRegister", dateRegister) :
                new ObjectParameter("DateRegister", typeof(System.DateTime));
    
            var jobTitleIdParameter = jobTitleId.HasValue ?
                new ObjectParameter("JobTitleId", jobTitleId) :
                new ObjectParameter("JobTitleId", typeof(int));
    
            var centerIdParameter = centerId.HasValue ?
                new ObjectParameter("CenterId", centerId) :
                new ObjectParameter("CenterId", typeof(int));
    
            var ouIdParameter = ouId.HasValue ?
                new ObjectParameter("OuId", ouId) :
                new ObjectParameter("OuId", typeof(int));
    
            var employeeCVParameter = employeeCV != null ?
                new ObjectParameter("EmployeeCV", employeeCV) :
                new ObjectParameter("EmployeeCV", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Creat_Employees", employeeNameParameter, sexParameter, dateBirhdayParameter, mobileParameter, phoneParameter, emailParameter, universityNameParameter, addressParameter, identityNumberParameter, dateOfIssueParameter, placeOfIssueParameter, placeBirthdayParameter, personalTaxCodeParameter, descriptionParameter, orderNumberParameter, dateCreateParameter, dateLastUpdateParameter, dateRegisterParameter, jobTitleIdParameter, centerIdParameter, ouIdParameter, employeeCVParameter);
        }
    
        public virtual int SP_Delete_Employee(Nullable<int> idEmployee)
        {
            var idEmployeeParameter = idEmployee.HasValue ?
                new ObjectParameter("IdEmployee", idEmployee) :
                new ObjectParameter("IdEmployee", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Delete_Employee", idEmployeeParameter);
        }
    
        public virtual int SP_Update_Employee(Nullable<int> idEmployee, string employeeName, Nullable<int> sex, Nullable<System.DateTime> dateBirhday, string mobile, string phone, string email, string universityName, string address, string identityNumber, Nullable<System.DateTime> dateOfIssue, string placeOfIssue, string placeBirthday, string personalTaxCode, string description, Nullable<int> orderNumber, Nullable<System.DateTime> dateCreate, Nullable<System.DateTime> dateRegister, Nullable<int> jobTitleId, Nullable<int> centerId, Nullable<int> ouId, string employeeCV)
        {
            var idEmployeeParameter = idEmployee.HasValue ?
                new ObjectParameter("IdEmployee", idEmployee) :
                new ObjectParameter("IdEmployee", typeof(int));
    
            var employeeNameParameter = employeeName != null ?
                new ObjectParameter("EmployeeName", employeeName) :
                new ObjectParameter("EmployeeName", typeof(string));
    
            var sexParameter = sex.HasValue ?
                new ObjectParameter("Sex", sex) :
                new ObjectParameter("Sex", typeof(int));
    
            var dateBirhdayParameter = dateBirhday.HasValue ?
                new ObjectParameter("DateBirhday", dateBirhday) :
                new ObjectParameter("DateBirhday", typeof(System.DateTime));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var universityNameParameter = universityName != null ?
                new ObjectParameter("UniversityName", universityName) :
                new ObjectParameter("UniversityName", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var identityNumberParameter = identityNumber != null ?
                new ObjectParameter("IdentityNumber", identityNumber) :
                new ObjectParameter("IdentityNumber", typeof(string));
    
            var dateOfIssueParameter = dateOfIssue.HasValue ?
                new ObjectParameter("DateOfIssue", dateOfIssue) :
                new ObjectParameter("DateOfIssue", typeof(System.DateTime));
    
            var placeOfIssueParameter = placeOfIssue != null ?
                new ObjectParameter("PlaceOfIssue", placeOfIssue) :
                new ObjectParameter("PlaceOfIssue", typeof(string));
    
            var placeBirthdayParameter = placeBirthday != null ?
                new ObjectParameter("PlaceBirthday", placeBirthday) :
                new ObjectParameter("PlaceBirthday", typeof(string));
    
            var personalTaxCodeParameter = personalTaxCode != null ?
                new ObjectParameter("PersonalTaxCode", personalTaxCode) :
                new ObjectParameter("PersonalTaxCode", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var orderNumberParameter = orderNumber.HasValue ?
                new ObjectParameter("OrderNumber", orderNumber) :
                new ObjectParameter("OrderNumber", typeof(int));
    
            var dateCreateParameter = dateCreate.HasValue ?
                new ObjectParameter("DateCreate", dateCreate) :
                new ObjectParameter("DateCreate", typeof(System.DateTime));
    
            var dateRegisterParameter = dateRegister.HasValue ?
                new ObjectParameter("DateRegister", dateRegister) :
                new ObjectParameter("DateRegister", typeof(System.DateTime));
    
            var jobTitleIdParameter = jobTitleId.HasValue ?
                new ObjectParameter("JobTitleId", jobTitleId) :
                new ObjectParameter("JobTitleId", typeof(int));
    
            var centerIdParameter = centerId.HasValue ?
                new ObjectParameter("CenterId", centerId) :
                new ObjectParameter("CenterId", typeof(int));
    
            var ouIdParameter = ouId.HasValue ?
                new ObjectParameter("OuId", ouId) :
                new ObjectParameter("OuId", typeof(int));
    
            var employeeCVParameter = employeeCV != null ?
                new ObjectParameter("EmployeeCV", employeeCV) :
                new ObjectParameter("EmployeeCV", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Update_Employee", idEmployeeParameter, employeeNameParameter, sexParameter, dateBirhdayParameter, mobileParameter, phoneParameter, emailParameter, universityNameParameter, addressParameter, identityNumberParameter, dateOfIssueParameter, placeOfIssueParameter, placeBirthdayParameter, personalTaxCodeParameter, descriptionParameter, orderNumberParameter, dateCreateParameter, dateRegisterParameter, jobTitleIdParameter, centerIdParameter, ouIdParameter, employeeCVParameter);
        }
    
        public virtual ObjectResult<SP_GetByID_Employee_Result> SP_GetByID_Employee(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetByID_Employee_Result>("SP_GetByID_Employee", idParameter);
        }
    
        public virtual ObjectResult<SP_GETLISTSTUDENT_NOTINCLASS_BYCLASSID_STUDENTS_Result> SP_GETLISTSTUDENT_NOTINCLASS_BYCLASSID_STUDENTS(string fromdate, Nullable<int> classid, string todate)
        {
            var fromdateParameter = fromdate != null ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(string));
    
            var classidParameter = classid.HasValue ?
                new ObjectParameter("classid", classid) :
                new ObjectParameter("classid", typeof(int));
    
            var todateParameter = todate != null ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GETLISTSTUDENT_NOTINCLASS_BYCLASSID_STUDENTS_Result>("SP_GETLISTSTUDENT_NOTINCLASS_BYCLASSID_STUDENTS", fromdateParameter, classidParameter, todateParameter);
        }
    
        public virtual ObjectResult<SP_GETSTUDENT_BYID_STUDENTS_Result> SP_GETSTUDENT_BYID_STUDENTS(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GETSTUDENT_BYID_STUDENTS_Result>("SP_GETSTUDENT_BYID_STUDENTS", idParameter);
        }
    
        public virtual ObjectResult<SP_GETELEMENT_BYID_CLASSES_Result> SP_GETELEMENT_BYID_CLASSES(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GETELEMENT_BYID_CLASSES_Result>("SP_GETELEMENT_BYID_CLASSES", idParameter);
        }
    
        public virtual int SP_INSERT_STUDENT_CLASS(Nullable<int> classId, Nullable<int> studentId, string dateStart, Nullable<System.DateTime> dateEnd, string comment, Nullable<bool> isMutiPrice, Nullable<int> numberPrice, Nullable<System.DateTime> datePrice, string dESCRIPTION, Nullable<double> totalPrice, Nullable<double> price1, Nullable<double> price2, Nullable<double> price3, Nullable<double> mustPay, Nullable<int> idPolicyStudent, Nullable<double> beforePrice, Nullable<byte> sTATUS, Nullable<long> userIdConfirm)
        {
            var classIdParameter = classId.HasValue ?
                new ObjectParameter("ClassId", classId) :
                new ObjectParameter("ClassId", typeof(int));
    
            var studentIdParameter = studentId.HasValue ?
                new ObjectParameter("StudentId", studentId) :
                new ObjectParameter("StudentId", typeof(int));
    
            var dateStartParameter = dateStart != null ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(string));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            var commentParameter = comment != null ?
                new ObjectParameter("Comment", comment) :
                new ObjectParameter("Comment", typeof(string));
    
            var isMutiPriceParameter = isMutiPrice.HasValue ?
                new ObjectParameter("IsMutiPrice", isMutiPrice) :
                new ObjectParameter("IsMutiPrice", typeof(bool));
    
            var numberPriceParameter = numberPrice.HasValue ?
                new ObjectParameter("NumberPrice", numberPrice) :
                new ObjectParameter("NumberPrice", typeof(int));
    
            var datePriceParameter = datePrice.HasValue ?
                new ObjectParameter("DatePrice", datePrice) :
                new ObjectParameter("DatePrice", typeof(System.DateTime));
    
            var dESCRIPTIONParameter = dESCRIPTION != null ?
                new ObjectParameter("DESCRIPTION", dESCRIPTION) :
                new ObjectParameter("DESCRIPTION", typeof(string));
    
            var totalPriceParameter = totalPrice.HasValue ?
                new ObjectParameter("TotalPrice", totalPrice) :
                new ObjectParameter("TotalPrice", typeof(double));
    
            var price1Parameter = price1.HasValue ?
                new ObjectParameter("Price1", price1) :
                new ObjectParameter("Price1", typeof(double));
    
            var price2Parameter = price2.HasValue ?
                new ObjectParameter("Price2", price2) :
                new ObjectParameter("Price2", typeof(double));
    
            var price3Parameter = price3.HasValue ?
                new ObjectParameter("Price3", price3) :
                new ObjectParameter("Price3", typeof(double));
    
            var mustPayParameter = mustPay.HasValue ?
                new ObjectParameter("MustPay", mustPay) :
                new ObjectParameter("MustPay", typeof(double));
    
            var idPolicyStudentParameter = idPolicyStudent.HasValue ?
                new ObjectParameter("IdPolicyStudent", idPolicyStudent) :
                new ObjectParameter("IdPolicyStudent", typeof(int));
    
            var beforePriceParameter = beforePrice.HasValue ?
                new ObjectParameter("BeforePrice", beforePrice) :
                new ObjectParameter("BeforePrice", typeof(double));
    
            var sTATUSParameter = sTATUS.HasValue ?
                new ObjectParameter("STATUS", sTATUS) :
                new ObjectParameter("STATUS", typeof(byte));
    
            var userIdConfirmParameter = userIdConfirm.HasValue ?
                new ObjectParameter("UserIdConfirm", userIdConfirm) :
                new ObjectParameter("UserIdConfirm", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_STUDENT_CLASS", classIdParameter, studentIdParameter, dateStartParameter, dateEndParameter, commentParameter, isMutiPriceParameter, numberPriceParameter, datePriceParameter, dESCRIPTIONParameter, totalPriceParameter, price1Parameter, price2Parameter, price3Parameter, mustPayParameter, idPolicyStudentParameter, beforePriceParameter, sTATUSParameter, userIdConfirmParameter);
        }
    
        public virtual int SP_UPDATE_EXPERT_CLASSES(Nullable<int> idCl, Nullable<int> idExp)
        {
            var idClParameter = idCl.HasValue ?
                new ObjectParameter("idCl", idCl) :
                new ObjectParameter("idCl", typeof(int));
    
            var idExpParameter = idExp.HasValue ?
                new ObjectParameter("idExp", idExp) :
                new ObjectParameter("idExp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UPDATE_EXPERT_CLASSES", idClParameter, idExpParameter);
        }
    
        public virtual ObjectResult<SP_GETALL_EXPERT_INFO_Result> SP_GETALL_EXPERT_INFO()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GETALL_EXPERT_INFO_Result>("SP_GETALL_EXPERT_INFO");
        }
    
        public virtual ObjectResult<SP_GETELEMENT_BYID_EXPERT_INFO_Result> SP_GETELEMENT_BYID_EXPERT_INFO(Nullable<int> idExpert)
        {
            var idExpertParameter = idExpert.HasValue ?
                new ObjectParameter("IdExpert", idExpert) :
                new ObjectParameter("IdExpert", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GETELEMENT_BYID_EXPERT_INFO_Result>("SP_GETELEMENT_BYID_EXPERT_INFO", idExpertParameter);
        }
    
        public virtual int SP_INSERTUPDATE_EXPERT_INFO(Nullable<int> flag, Nullable<int> idExpert, string expName, Nullable<System.DateTime> birthday, Nullable<int> sex, string address, string des, Nullable<int> yearExp, string uniDegree, Nullable<int> centerID, string email, string mobile, string expertCV)
        {
            var flagParameter = flag.HasValue ?
                new ObjectParameter("flag", flag) :
                new ObjectParameter("flag", typeof(int));
    
            var idExpertParameter = idExpert.HasValue ?
                new ObjectParameter("idExpert", idExpert) :
                new ObjectParameter("idExpert", typeof(int));
    
            var expNameParameter = expName != null ?
                new ObjectParameter("ExpName", expName) :
                new ObjectParameter("ExpName", typeof(string));
    
            var birthdayParameter = birthday.HasValue ?
                new ObjectParameter("Birthday", birthday) :
                new ObjectParameter("Birthday", typeof(System.DateTime));
    
            var sexParameter = sex.HasValue ?
                new ObjectParameter("Sex", sex) :
                new ObjectParameter("Sex", typeof(int));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var desParameter = des != null ?
                new ObjectParameter("des", des) :
                new ObjectParameter("des", typeof(string));
    
            var yearExpParameter = yearExp.HasValue ?
                new ObjectParameter("yearExp", yearExp) :
                new ObjectParameter("yearExp", typeof(int));
    
            var uniDegreeParameter = uniDegree != null ?
                new ObjectParameter("UniDegree", uniDegree) :
                new ObjectParameter("UniDegree", typeof(string));
    
            var centerIDParameter = centerID.HasValue ?
                new ObjectParameter("CenterID", centerID) :
                new ObjectParameter("CenterID", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var expertCVParameter = expertCV != null ?
                new ObjectParameter("ExpertCV", expertCV) :
                new ObjectParameter("ExpertCV", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERTUPDATE_EXPERT_INFO", flagParameter, idExpertParameter, expNameParameter, birthdayParameter, sexParameter, addressParameter, desParameter, yearExpParameter, uniDegreeParameter, centerIDParameter, emailParameter, mobileParameter, expertCVParameter);
        }
    
        public virtual int SP_DELETE_EXPERTINFO_XOA(Nullable<int> expertId)
        {
            var expertIdParameter = expertId.HasValue ?
                new ObjectParameter("ExpertId", expertId) :
                new ObjectParameter("ExpertId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DELETE_EXPERTINFO_XOA", expertIdParameter);
        }
    
        public virtual ObjectResult<SP_GETALL_AYEAR_CLASS_Result> SP_GETALL_AYEAR_CLASS()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GETALL_AYEAR_CLASS_Result>("SP_GETALL_AYEAR_CLASS");
        }
    
        public virtual ObjectResult<SP_GETALL_EXPERTINFO_HIENTHI_Result> SP_GETALL_EXPERTINFO_HIENTHI()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GETALL_EXPERTINFO_HIENTHI_Result>("SP_GETALL_EXPERTINFO_HIENTHI");
        }
    
        public virtual ObjectResult<SP_GETALL_HOCVIEN_3MONTH_Result> SP_GETALL_HOCVIEN_3MONTH()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GETALL_HOCVIEN_3MONTH_Result>("SP_GETALL_HOCVIEN_3MONTH");
        }
    
        public virtual ObjectResult<SP_GETELEMENTBYID_EXPERTINFO_Result> SP_GETELEMENTBYID_EXPERTINFO(Nullable<int> expertId)
        {
            var expertIdParameter = expertId.HasValue ?
                new ObjectParameter("ExpertId", expertId) :
                new ObjectParameter("ExpertId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GETELEMENTBYID_EXPERTINFO_Result>("SP_GETELEMENTBYID_EXPERTINFO", expertIdParameter);
        }
    
        public virtual ObjectResult<SP_GETHOCPHI_BYSTUDENTID_CLASS_Result> SP_GETHOCPHI_BYSTUDENTID_CLASS(Nullable<int> idClass)
        {
            var idClassParameter = idClass.HasValue ?
                new ObjectParameter("idClass", idClass) :
                new ObjectParameter("idClass", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GETHOCPHI_BYSTUDENTID_CLASS_Result>("SP_GETHOCPHI_BYSTUDENTID_CLASS", idClassParameter);
        }
    
        public virtual int SP_INSERT_COMMENTSUPPORT(Nullable<int> id, string commentName, string desription, Nullable<System.DateTime> dateCreat, Nullable<System.DateTime> dataLastUpdate, Nullable<int> userId, string userName, string imageName, string imagePath, Nullable<int> studentId, string notes)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var commentNameParameter = commentName != null ?
                new ObjectParameter("CommentName", commentName) :
                new ObjectParameter("CommentName", typeof(string));
    
            var desriptionParameter = desription != null ?
                new ObjectParameter("Desription", desription) :
                new ObjectParameter("Desription", typeof(string));
    
            var dateCreatParameter = dateCreat.HasValue ?
                new ObjectParameter("DateCreat", dateCreat) :
                new ObjectParameter("DateCreat", typeof(System.DateTime));
    
            var dataLastUpdateParameter = dataLastUpdate.HasValue ?
                new ObjectParameter("DataLastUpdate", dataLastUpdate) :
                new ObjectParameter("DataLastUpdate", typeof(System.DateTime));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var imageNameParameter = imageName != null ?
                new ObjectParameter("ImageName", imageName) :
                new ObjectParameter("ImageName", typeof(string));
    
            var imagePathParameter = imagePath != null ?
                new ObjectParameter("ImagePath", imagePath) :
                new ObjectParameter("ImagePath", typeof(string));
    
            var studentIdParameter = studentId.HasValue ?
                new ObjectParameter("StudentId", studentId) :
                new ObjectParameter("StudentId", typeof(int));
    
            var notesParameter = notes != null ?
                new ObjectParameter("Notes", notes) :
                new ObjectParameter("Notes", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_COMMENTSUPPORT", idParameter, commentNameParameter, desriptionParameter, dateCreatParameter, dataLastUpdateParameter, userIdParameter, userNameParameter, imageNameParameter, imagePathParameter, studentIdParameter, notesParameter);
        }
    
        public virtual int SP_INSERT_EXPERTINFO_THEM(string expertName, Nullable<System.DateTime> dateBirthday, Nullable<int> sex, string aDDRESS, string dESCRIPTION, Nullable<int> yearsExperience, string universityDegree, Nullable<int> centerId, string email, string mobile, string expertCV)
        {
            var expertNameParameter = expertName != null ?
                new ObjectParameter("ExpertName", expertName) :
                new ObjectParameter("ExpertName", typeof(string));
    
            var dateBirthdayParameter = dateBirthday.HasValue ?
                new ObjectParameter("DateBirthday", dateBirthday) :
                new ObjectParameter("DateBirthday", typeof(System.DateTime));
    
            var sexParameter = sex.HasValue ?
                new ObjectParameter("Sex", sex) :
                new ObjectParameter("Sex", typeof(int));
    
            var aDDRESSParameter = aDDRESS != null ?
                new ObjectParameter("ADDRESS", aDDRESS) :
                new ObjectParameter("ADDRESS", typeof(string));
    
            var dESCRIPTIONParameter = dESCRIPTION != null ?
                new ObjectParameter("DESCRIPTION", dESCRIPTION) :
                new ObjectParameter("DESCRIPTION", typeof(string));
    
            var yearsExperienceParameter = yearsExperience.HasValue ?
                new ObjectParameter("YearsExperience", yearsExperience) :
                new ObjectParameter("YearsExperience", typeof(int));
    
            var universityDegreeParameter = universityDegree != null ?
                new ObjectParameter("UniversityDegree", universityDegree) :
                new ObjectParameter("UniversityDegree", typeof(string));
    
            var centerIdParameter = centerId.HasValue ?
                new ObjectParameter("CenterId", centerId) :
                new ObjectParameter("CenterId", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var expertCVParameter = expertCV != null ?
                new ObjectParameter("ExpertCV", expertCV) :
                new ObjectParameter("ExpertCV", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_EXPERTINFO_THEM", expertNameParameter, dateBirthdayParameter, sexParameter, aDDRESSParameter, dESCRIPTIONParameter, yearsExperienceParameter, universityDegreeParameter, centerIdParameter, emailParameter, mobileParameter, expertCVParameter);
        }
    
        public virtual int SP_INSERT_EXPERTINFO_THEMMOI(string expertName, Nullable<System.DateTime> dateBirthday, Nullable<int> sex, string aDDRESS, string dESCRIPTION, Nullable<int> yearsExperience, string universityDegree, Nullable<int> centerId, string email, string mobile, string expertCV)
        {
            var expertNameParameter = expertName != null ?
                new ObjectParameter("ExpertName", expertName) :
                new ObjectParameter("ExpertName", typeof(string));
    
            var dateBirthdayParameter = dateBirthday.HasValue ?
                new ObjectParameter("DateBirthday", dateBirthday) :
                new ObjectParameter("DateBirthday", typeof(System.DateTime));
    
            var sexParameter = sex.HasValue ?
                new ObjectParameter("Sex", sex) :
                new ObjectParameter("Sex", typeof(int));
    
            var aDDRESSParameter = aDDRESS != null ?
                new ObjectParameter("ADDRESS", aDDRESS) :
                new ObjectParameter("ADDRESS", typeof(string));
    
            var dESCRIPTIONParameter = dESCRIPTION != null ?
                new ObjectParameter("DESCRIPTION", dESCRIPTION) :
                new ObjectParameter("DESCRIPTION", typeof(string));
    
            var yearsExperienceParameter = yearsExperience.HasValue ?
                new ObjectParameter("YearsExperience", yearsExperience) :
                new ObjectParameter("YearsExperience", typeof(int));
    
            var universityDegreeParameter = universityDegree != null ?
                new ObjectParameter("UniversityDegree", universityDegree) :
                new ObjectParameter("UniversityDegree", typeof(string));
    
            var centerIdParameter = centerId.HasValue ?
                new ObjectParameter("CenterId", centerId) :
                new ObjectParameter("CenterId", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var expertCVParameter = expertCV != null ?
                new ObjectParameter("ExpertCV", expertCV) :
                new ObjectParameter("ExpertCV", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_EXPERTINFO_THEMMOI", expertNameParameter, dateBirthdayParameter, sexParameter, aDDRESSParameter, dESCRIPTIONParameter, yearsExperienceParameter, universityDegreeParameter, centerIdParameter, emailParameter, mobileParameter, expertCVParameter);
        }
    
        public virtual int SP_UPDATE_EXPERTINFO_SUA(Nullable<int> expertId, string expertName, Nullable<System.DateTime> dateBirthday, Nullable<int> sex, string aDDRESS, string dESCRIPTION, Nullable<int> yearsExperience, string universityDegree, Nullable<int> centerId, string email, string mobile, string expertCV)
        {
            var expertIdParameter = expertId.HasValue ?
                new ObjectParameter("ExpertId", expertId) :
                new ObjectParameter("ExpertId", typeof(int));
    
            var expertNameParameter = expertName != null ?
                new ObjectParameter("ExpertName", expertName) :
                new ObjectParameter("ExpertName", typeof(string));
    
            var dateBirthdayParameter = dateBirthday.HasValue ?
                new ObjectParameter("DateBirthday", dateBirthday) :
                new ObjectParameter("DateBirthday", typeof(System.DateTime));
    
            var sexParameter = sex.HasValue ?
                new ObjectParameter("Sex", sex) :
                new ObjectParameter("Sex", typeof(int));
    
            var aDDRESSParameter = aDDRESS != null ?
                new ObjectParameter("ADDRESS", aDDRESS) :
                new ObjectParameter("ADDRESS", typeof(string));
    
            var dESCRIPTIONParameter = dESCRIPTION != null ?
                new ObjectParameter("DESCRIPTION", dESCRIPTION) :
                new ObjectParameter("DESCRIPTION", typeof(string));
    
            var yearsExperienceParameter = yearsExperience.HasValue ?
                new ObjectParameter("YearsExperience", yearsExperience) :
                new ObjectParameter("YearsExperience", typeof(int));
    
            var universityDegreeParameter = universityDegree != null ?
                new ObjectParameter("UniversityDegree", universityDegree) :
                new ObjectParameter("UniversityDegree", typeof(string));
    
            var centerIdParameter = centerId.HasValue ?
                new ObjectParameter("CenterId", centerId) :
                new ObjectParameter("CenterId", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var expertCVParameter = expertCV != null ?
                new ObjectParameter("ExpertCV", expertCV) :
                new ObjectParameter("ExpertCV", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UPDATE_EXPERTINFO_SUA", expertIdParameter, expertNameParameter, dateBirthdayParameter, sexParameter, aDDRESSParameter, dESCRIPTIONParameter, yearsExperienceParameter, universityDegreeParameter, centerIdParameter, emailParameter, mobileParameter, expertCVParameter);
        }
    
        public virtual ObjectResult<SP_GETLITSTUDENT_BYID_CLASS_02_Result> SP_GETLITSTUDENT_BYID_CLASS_02(Nullable<int> classid)
        {
            var classidParameter = classid.HasValue ?
                new ObjectParameter("classid", classid) :
                new ObjectParameter("classid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GETLITSTUDENT_BYID_CLASS_02_Result>("SP_GETLITSTUDENT_BYID_CLASS_02", classidParameter);
        }
    
        public virtual int SP_Creat_Recruitment(string nAME, string dESCRIPTION, string contents, Nullable<System.DateTime> dateCreate, Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd, Nullable<int> number, string request, Nullable<int> centerId, Nullable<int> orderNumber, string avatar, string imagePath, string sTATUS)
        {
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var dESCRIPTIONParameter = dESCRIPTION != null ?
                new ObjectParameter("DESCRIPTION", dESCRIPTION) :
                new ObjectParameter("DESCRIPTION", typeof(string));
    
            var contentsParameter = contents != null ?
                new ObjectParameter("Contents", contents) :
                new ObjectParameter("Contents", typeof(string));
    
            var dateCreateParameter = dateCreate.HasValue ?
                new ObjectParameter("DateCreate", dateCreate) :
                new ObjectParameter("DateCreate", typeof(System.DateTime));
    
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            var numberParameter = number.HasValue ?
                new ObjectParameter("Number", number) :
                new ObjectParameter("Number", typeof(int));
    
            var requestParameter = request != null ?
                new ObjectParameter("Request", request) :
                new ObjectParameter("Request", typeof(string));
    
            var centerIdParameter = centerId.HasValue ?
                new ObjectParameter("CenterId", centerId) :
                new ObjectParameter("CenterId", typeof(int));
    
            var orderNumberParameter = orderNumber.HasValue ?
                new ObjectParameter("OrderNumber", orderNumber) :
                new ObjectParameter("OrderNumber", typeof(int));
    
            var avatarParameter = avatar != null ?
                new ObjectParameter("Avatar", avatar) :
                new ObjectParameter("Avatar", typeof(string));
    
            var imagePathParameter = imagePath != null ?
                new ObjectParameter("ImagePath", imagePath) :
                new ObjectParameter("ImagePath", typeof(string));
    
            var sTATUSParameter = sTATUS != null ?
                new ObjectParameter("STATUS", sTATUS) :
                new ObjectParameter("STATUS", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Creat_Recruitment", nAMEParameter, dESCRIPTIONParameter, contentsParameter, dateCreateParameter, dateStartParameter, dateEndParameter, numberParameter, requestParameter, centerIdParameter, orderNumberParameter, avatarParameter, imagePathParameter, sTATUSParameter);
        }
    
        public virtual int SP_Delete_Recruitment(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Delete_Recruitment", idParameter);
        }
    
        public virtual ObjectResult<SP_GetAll_CandidateV2_Result> SP_GetAll_CandidateV2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetAll_CandidateV2_Result>("SP_GetAll_CandidateV2");
        }
    
        public virtual ObjectResult<SP_GetAll_JobTitle_Result> SP_GetAll_JobTitle()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetAll_JobTitle_Result>("SP_GetAll_JobTitle");
        }
    
        public virtual ObjectResult<SP_GetAll_Recruitment_Result> SP_GetAll_Recruitment()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetAll_Recruitment_Result>("SP_GetAll_Recruitment");
        }
    
        public virtual ObjectResult<SP_GetCandidate_ByIdRecruitmentV2_Result> SP_GetCandidate_ByIdRecruitmentV2(Nullable<int> idRec)
        {
            var idRecParameter = idRec.HasValue ?
                new ObjectParameter("IdRec", idRec) :
                new ObjectParameter("IdRec", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetCandidate_ByIdRecruitmentV2_Result>("SP_GetCandidate_ByIdRecruitmentV2", idRecParameter);
        }
    
        public virtual int SP_InsertCV_toCandidate(string content)
        {
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_InsertCV_toCandidate", contentParameter);
        }
    
        public virtual int SP_Update_Recruitment(Nullable<int> id, string nAME, string dESCRIPTION, string contents, Nullable<System.DateTime> dateCreate, Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd, Nullable<int> number, string request, Nullable<int> centerId, Nullable<int> orderNumber, string avatar, string imagePath, string sTATUS)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nAMEParameter = nAME != null ?
                new ObjectParameter("NAME", nAME) :
                new ObjectParameter("NAME", typeof(string));
    
            var dESCRIPTIONParameter = dESCRIPTION != null ?
                new ObjectParameter("DESCRIPTION", dESCRIPTION) :
                new ObjectParameter("DESCRIPTION", typeof(string));
    
            var contentsParameter = contents != null ?
                new ObjectParameter("Contents", contents) :
                new ObjectParameter("Contents", typeof(string));
    
            var dateCreateParameter = dateCreate.HasValue ?
                new ObjectParameter("DateCreate", dateCreate) :
                new ObjectParameter("DateCreate", typeof(System.DateTime));
    
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            var numberParameter = number.HasValue ?
                new ObjectParameter("Number", number) :
                new ObjectParameter("Number", typeof(int));
    
            var requestParameter = request != null ?
                new ObjectParameter("Request", request) :
                new ObjectParameter("Request", typeof(string));
    
            var centerIdParameter = centerId.HasValue ?
                new ObjectParameter("CenterId", centerId) :
                new ObjectParameter("CenterId", typeof(int));
    
            var orderNumberParameter = orderNumber.HasValue ?
                new ObjectParameter("OrderNumber", orderNumber) :
                new ObjectParameter("OrderNumber", typeof(int));
    
            var avatarParameter = avatar != null ?
                new ObjectParameter("Avatar", avatar) :
                new ObjectParameter("Avatar", typeof(string));
    
            var imagePathParameter = imagePath != null ?
                new ObjectParameter("ImagePath", imagePath) :
                new ObjectParameter("ImagePath", typeof(string));
    
            var sTATUSParameter = sTATUS != null ?
                new ObjectParameter("STATUS", sTATUS) :
                new ObjectParameter("STATUS", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Update_Recruitment", idParameter, nAMEParameter, dESCRIPTIONParameter, contentsParameter, dateCreateParameter, dateStartParameter, dateEndParameter, numberParameter, requestParameter, centerIdParameter, orderNumberParameter, avatarParameter, imagePathParameter, sTATUSParameter);
        }
    
        public virtual int SP_Delete_Candidate(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Delete_Candidate", idParameter);
        }
    
        public virtual int SP_Creat_Candidate(string firstName, string lastName, string fullName, Nullable<System.DateTime> dateBirthday, Nullable<int> sex, string aDDRESS, string dESCRIPTION, Nullable<int> yearsExperience, string universityDegree, Nullable<int> centerId, string avatar, string imagePath, string contents, string documentPath, Nullable<System.DateTime> dateCreate, Nullable<System.DateTime> dateLastUpdate, Nullable<System.DateTime> dateInterview, Nullable<System.DateTime> dateSent, string notes, Nullable<int> recruitmentId, Nullable<int> orderNumber, Nullable<int> jobTitleId, Nullable<int> sTATUS)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var dateBirthdayParameter = dateBirthday.HasValue ?
                new ObjectParameter("DateBirthday", dateBirthday) :
                new ObjectParameter("DateBirthday", typeof(System.DateTime));
    
            var sexParameter = sex.HasValue ?
                new ObjectParameter("Sex", sex) :
                new ObjectParameter("Sex", typeof(int));
    
            var aDDRESSParameter = aDDRESS != null ?
                new ObjectParameter("ADDRESS", aDDRESS) :
                new ObjectParameter("ADDRESS", typeof(string));
    
            var dESCRIPTIONParameter = dESCRIPTION != null ?
                new ObjectParameter("DESCRIPTION", dESCRIPTION) :
                new ObjectParameter("DESCRIPTION", typeof(string));
    
            var yearsExperienceParameter = yearsExperience.HasValue ?
                new ObjectParameter("YearsExperience", yearsExperience) :
                new ObjectParameter("YearsExperience", typeof(int));
    
            var universityDegreeParameter = universityDegree != null ?
                new ObjectParameter("UniversityDegree", universityDegree) :
                new ObjectParameter("UniversityDegree", typeof(string));
    
            var centerIdParameter = centerId.HasValue ?
                new ObjectParameter("CenterId", centerId) :
                new ObjectParameter("CenterId", typeof(int));
    
            var avatarParameter = avatar != null ?
                new ObjectParameter("Avatar", avatar) :
                new ObjectParameter("Avatar", typeof(string));
    
            var imagePathParameter = imagePath != null ?
                new ObjectParameter("ImagePath", imagePath) :
                new ObjectParameter("ImagePath", typeof(string));
    
            var contentsParameter = contents != null ?
                new ObjectParameter("Contents", contents) :
                new ObjectParameter("Contents", typeof(string));
    
            var documentPathParameter = documentPath != null ?
                new ObjectParameter("DocumentPath", documentPath) :
                new ObjectParameter("DocumentPath", typeof(string));
    
            var dateCreateParameter = dateCreate.HasValue ?
                new ObjectParameter("DateCreate", dateCreate) :
                new ObjectParameter("DateCreate", typeof(System.DateTime));
    
            var dateLastUpdateParameter = dateLastUpdate.HasValue ?
                new ObjectParameter("DateLastUpdate", dateLastUpdate) :
                new ObjectParameter("DateLastUpdate", typeof(System.DateTime));
    
            var dateInterviewParameter = dateInterview.HasValue ?
                new ObjectParameter("DateInterview", dateInterview) :
                new ObjectParameter("DateInterview", typeof(System.DateTime));
    
            var dateSentParameter = dateSent.HasValue ?
                new ObjectParameter("DateSent", dateSent) :
                new ObjectParameter("DateSent", typeof(System.DateTime));
    
            var notesParameter = notes != null ?
                new ObjectParameter("Notes", notes) :
                new ObjectParameter("Notes", typeof(string));
    
            var recruitmentIdParameter = recruitmentId.HasValue ?
                new ObjectParameter("RecruitmentId", recruitmentId) :
                new ObjectParameter("RecruitmentId", typeof(int));
    
            var orderNumberParameter = orderNumber.HasValue ?
                new ObjectParameter("OrderNumber", orderNumber) :
                new ObjectParameter("OrderNumber", typeof(int));
    
            var jobTitleIdParameter = jobTitleId.HasValue ?
                new ObjectParameter("JobTitleId", jobTitleId) :
                new ObjectParameter("JobTitleId", typeof(int));
    
            var sTATUSParameter = sTATUS.HasValue ?
                new ObjectParameter("STATUS", sTATUS) :
                new ObjectParameter("STATUS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Creat_Candidate", firstNameParameter, lastNameParameter, fullNameParameter, dateBirthdayParameter, sexParameter, aDDRESSParameter, dESCRIPTIONParameter, yearsExperienceParameter, universityDegreeParameter, centerIdParameter, avatarParameter, imagePathParameter, contentsParameter, documentPathParameter, dateCreateParameter, dateLastUpdateParameter, dateInterviewParameter, dateSentParameter, notesParameter, recruitmentIdParameter, orderNumberParameter, jobTitleIdParameter, sTATUSParameter);
        }
    
        public virtual int SP_Update_Candidate(Nullable<int> id, string firstName, string lastName, string fullName, Nullable<System.DateTime> dateBirthday, Nullable<int> sex, string aDDRESS, string dESCRIPTION, Nullable<int> yearsExperience, string universityDegree, Nullable<int> centerId, string avatar, string imagePath, string contents, string documentPath, Nullable<System.DateTime> dateCreate, Nullable<System.DateTime> dateLastUpdate, Nullable<System.DateTime> dateInterview, Nullable<System.DateTime> dateSent, string notes, Nullable<int> recruitmentId, Nullable<int> orderNumber, Nullable<int> jobTitleId, Nullable<int> sTATUS)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var dateBirthdayParameter = dateBirthday.HasValue ?
                new ObjectParameter("DateBirthday", dateBirthday) :
                new ObjectParameter("DateBirthday", typeof(System.DateTime));
    
            var sexParameter = sex.HasValue ?
                new ObjectParameter("Sex", sex) :
                new ObjectParameter("Sex", typeof(int));
    
            var aDDRESSParameter = aDDRESS != null ?
                new ObjectParameter("ADDRESS", aDDRESS) :
                new ObjectParameter("ADDRESS", typeof(string));
    
            var dESCRIPTIONParameter = dESCRIPTION != null ?
                new ObjectParameter("DESCRIPTION", dESCRIPTION) :
                new ObjectParameter("DESCRIPTION", typeof(string));
    
            var yearsExperienceParameter = yearsExperience.HasValue ?
                new ObjectParameter("YearsExperience", yearsExperience) :
                new ObjectParameter("YearsExperience", typeof(int));
    
            var universityDegreeParameter = universityDegree != null ?
                new ObjectParameter("UniversityDegree", universityDegree) :
                new ObjectParameter("UniversityDegree", typeof(string));
    
            var centerIdParameter = centerId.HasValue ?
                new ObjectParameter("CenterId", centerId) :
                new ObjectParameter("CenterId", typeof(int));
    
            var avatarParameter = avatar != null ?
                new ObjectParameter("Avatar", avatar) :
                new ObjectParameter("Avatar", typeof(string));
    
            var imagePathParameter = imagePath != null ?
                new ObjectParameter("ImagePath", imagePath) :
                new ObjectParameter("ImagePath", typeof(string));
    
            var contentsParameter = contents != null ?
                new ObjectParameter("Contents", contents) :
                new ObjectParameter("Contents", typeof(string));
    
            var documentPathParameter = documentPath != null ?
                new ObjectParameter("DocumentPath", documentPath) :
                new ObjectParameter("DocumentPath", typeof(string));
    
            var dateCreateParameter = dateCreate.HasValue ?
                new ObjectParameter("DateCreate", dateCreate) :
                new ObjectParameter("DateCreate", typeof(System.DateTime));
    
            var dateLastUpdateParameter = dateLastUpdate.HasValue ?
                new ObjectParameter("DateLastUpdate", dateLastUpdate) :
                new ObjectParameter("DateLastUpdate", typeof(System.DateTime));
    
            var dateInterviewParameter = dateInterview.HasValue ?
                new ObjectParameter("DateInterview", dateInterview) :
                new ObjectParameter("DateInterview", typeof(System.DateTime));
    
            var dateSentParameter = dateSent.HasValue ?
                new ObjectParameter("DateSent", dateSent) :
                new ObjectParameter("DateSent", typeof(System.DateTime));
    
            var notesParameter = notes != null ?
                new ObjectParameter("Notes", notes) :
                new ObjectParameter("Notes", typeof(string));
    
            var recruitmentIdParameter = recruitmentId.HasValue ?
                new ObjectParameter("RecruitmentId", recruitmentId) :
                new ObjectParameter("RecruitmentId", typeof(int));
    
            var orderNumberParameter = orderNumber.HasValue ?
                new ObjectParameter("OrderNumber", orderNumber) :
                new ObjectParameter("OrderNumber", typeof(int));
    
            var jobTitleIdParameter = jobTitleId.HasValue ?
                new ObjectParameter("JobTitleId", jobTitleId) :
                new ObjectParameter("JobTitleId", typeof(int));
    
            var sTATUSParameter = sTATUS.HasValue ?
                new ObjectParameter("STATUS", sTATUS) :
                new ObjectParameter("STATUS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Update_Candidate", idParameter, firstNameParameter, lastNameParameter, fullNameParameter, dateBirthdayParameter, sexParameter, aDDRESSParameter, dESCRIPTIONParameter, yearsExperienceParameter, universityDegreeParameter, centerIdParameter, avatarParameter, imagePathParameter, contentsParameter, documentPathParameter, dateCreateParameter, dateLastUpdateParameter, dateInterviewParameter, dateSentParameter, notesParameter, recruitmentIdParameter, orderNumberParameter, jobTitleIdParameter, sTATUSParameter);
        }
    
        public virtual ObjectResult<SP_GetByID_Candidate_Result> SP_GetByID_Candidate(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetByID_Candidate_Result>("SP_GetByID_Candidate", idParameter);
        }
    
        public virtual ObjectResult<SP_GetByID_CandidateV2_Result> SP_GetByID_CandidateV2(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetByID_CandidateV2_Result>("SP_GetByID_CandidateV2", idParameter);
        }
    
        public virtual ObjectResult<SP_GetByID_RecruitmentInfo_Result> SP_GetByID_RecruitmentInfo(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetByID_RecruitmentInfo_Result>("SP_GetByID_RecruitmentInfo", idParameter);
        }
    
        public virtual int SP_Creat_CenterInfo(string centerName, string mobile, string phone, string fax, string aDDRESS, string website, string email, string dESCRIPTION)
        {
            var centerNameParameter = centerName != null ?
                new ObjectParameter("CenterName", centerName) :
                new ObjectParameter("CenterName", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            var aDDRESSParameter = aDDRESS != null ?
                new ObjectParameter("ADDRESS", aDDRESS) :
                new ObjectParameter("ADDRESS", typeof(string));
    
            var websiteParameter = website != null ?
                new ObjectParameter("Website", website) :
                new ObjectParameter("Website", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var dESCRIPTIONParameter = dESCRIPTION != null ?
                new ObjectParameter("DESCRIPTION", dESCRIPTION) :
                new ObjectParameter("DESCRIPTION", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Creat_CenterInfo", centerNameParameter, mobileParameter, phoneParameter, faxParameter, aDDRESSParameter, websiteParameter, emailParameter, dESCRIPTIONParameter);
        }
    
        public virtual ObjectResult<SP_GetAll_RecruitmentV2_Result> SP_GetAll_RecruitmentV2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GetAll_RecruitmentV2_Result>("SP_GetAll_RecruitmentV2");
        }
    
        public virtual int SP_Creat_JobTitle(string jobTitle, string dESCRIPTION, string imageName, string imagePath, Nullable<int> orderNumber)
        {
            var jobTitleParameter = jobTitle != null ?
                new ObjectParameter("JobTitle", jobTitle) :
                new ObjectParameter("JobTitle", typeof(string));
    
            var dESCRIPTIONParameter = dESCRIPTION != null ?
                new ObjectParameter("DESCRIPTION", dESCRIPTION) :
                new ObjectParameter("DESCRIPTION", typeof(string));
    
            var imageNameParameter = imageName != null ?
                new ObjectParameter("ImageName", imageName) :
                new ObjectParameter("ImageName", typeof(string));
    
            var imagePathParameter = imagePath != null ?
                new ObjectParameter("ImagePath", imagePath) :
                new ObjectParameter("ImagePath", typeof(string));
    
            var orderNumberParameter = orderNumber.HasValue ?
                new ObjectParameter("OrderNumber", orderNumber) :
                new ObjectParameter("OrderNumber", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Creat_JobTitle", jobTitleParameter, dESCRIPTIONParameter, imageNameParameter, imagePathParameter, orderNumberParameter);
        }
    
        public virtual int SP_Creat_PhongBan(string ouName, string imagePath, string dESCRIPTION, string email, string phone, string fax, string website)
        {
            var ouNameParameter = ouName != null ?
                new ObjectParameter("OuName", ouName) :
                new ObjectParameter("OuName", typeof(string));
    
            var imagePathParameter = imagePath != null ?
                new ObjectParameter("ImagePath", imagePath) :
                new ObjectParameter("ImagePath", typeof(string));
    
            var dESCRIPTIONParameter = dESCRIPTION != null ?
                new ObjectParameter("DESCRIPTION", dESCRIPTION) :
                new ObjectParameter("DESCRIPTION", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            var websiteParameter = website != null ?
                new ObjectParameter("Website", website) :
                new ObjectParameter("Website", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Creat_PhongBan", ouNameParameter, imagePathParameter, dESCRIPTIONParameter, emailParameter, phoneParameter, faxParameter, websiteParameter);
        }
    }
}
