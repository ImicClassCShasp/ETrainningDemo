//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IMIC.DATAACCESSLAYERS
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class WebIMICEntities : DbContext
    {
        public WebIMICEntities(string sValue) : base(sValue) { }

        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<WEB_IMIC_SP_RegisterDetail_ByTime_Result> WEB_IMIC_SP_RegisterDetail_ByTime(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<bool> isSeen)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var isSeenParameter = isSeen.HasValue ?
                new ObjectParameter("IsSeen", isSeen) :
                new ObjectParameter("IsSeen", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WEB_IMIC_SP_RegisterDetail_ByTime_Result>("WEB_IMIC_SP_RegisterDetail_ByTime", startDateParameter, endDateParameter, isSeenParameter);
        }
    
        public virtual ObjectResult<WEB_IMIC_SP_RegisterDetail_GetAll_NotSeen_Result> WEB_IMIC_SP_RegisterDetail_GetAll_NotSeen()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WEB_IMIC_SP_RegisterDetail_GetAll_NotSeen_Result>("WEB_IMIC_SP_RegisterDetail_GetAll_NotSeen");
        }
    
        public virtual ObjectResult<WEB_IMIC_SP_RegisterDetail_GetAll_Seen_Result> WEB_IMIC_SP_RegisterDetail_GetAll_Seen()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WEB_IMIC_SP_RegisterDetail_GetAll_Seen_Result>("WEB_IMIC_SP_RegisterDetail_GetAll_Seen");
        }
    
        public virtual ObjectResult<WEB_IMIC_SP_RegisterDetail_GetById_Result> WEB_IMIC_SP_RegisterDetail_GetById(Nullable<System.Guid> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WEB_IMIC_SP_RegisterDetail_GetById_Result>("WEB_IMIC_SP_RegisterDetail_GetById", idParameter);
        }
    
        public virtual ObjectResult<WEB_IMIC_SP_RegisterDetail_GetbyId_New_Result> WEB_IMIC_SP_RegisterDetail_GetbyId_New(Nullable<System.Guid> registerDetailId)
        {
            var registerDetailIdParameter = registerDetailId.HasValue ?
                new ObjectParameter("RegisterDetailId", registerDetailId) :
                new ObjectParameter("RegisterDetailId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WEB_IMIC_SP_RegisterDetail_GetbyId_New_Result>("WEB_IMIC_SP_RegisterDetail_GetbyId_New", registerDetailIdParameter);
        }
    
        public virtual ObjectResult<WEB_IMIC_SP_RegisterDetail_GetForEtraining_Result> WEB_IMIC_SP_RegisterDetail_GetForEtraining()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WEB_IMIC_SP_RegisterDetail_GetForEtraining_Result>("WEB_IMIC_SP_RegisterDetail_GetForEtraining");
        }
    
        public virtual int WEB_IMIC_SP_RegisterDetail_Update(Nullable<System.Guid> registerDetailId, Nullable<System.Guid> classId, Nullable<System.Guid> registerPersonId, string message, string comment, Nullable<byte> status, Nullable<bool> isSeen, Nullable<System.DateTime> createdTime, Nullable<System.Guid> courseId, Nullable<bool> flag)
        {
            var registerDetailIdParameter = registerDetailId.HasValue ?
                new ObjectParameter("RegisterDetailId", registerDetailId) :
                new ObjectParameter("RegisterDetailId", typeof(System.Guid));
    
            var classIdParameter = classId.HasValue ?
                new ObjectParameter("ClassId", classId) :
                new ObjectParameter("ClassId", typeof(System.Guid));
    
            var registerPersonIdParameter = registerPersonId.HasValue ?
                new ObjectParameter("RegisterPersonId", registerPersonId) :
                new ObjectParameter("RegisterPersonId", typeof(System.Guid));
    
            var messageParameter = message != null ?
                new ObjectParameter("Message", message) :
                new ObjectParameter("Message", typeof(string));
    
            var commentParameter = comment != null ?
                new ObjectParameter("Comment", comment) :
                new ObjectParameter("Comment", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(byte));
    
            var isSeenParameter = isSeen.HasValue ?
                new ObjectParameter("IsSeen", isSeen) :
                new ObjectParameter("IsSeen", typeof(bool));
    
            var createdTimeParameter = createdTime.HasValue ?
                new ObjectParameter("CreatedTime", createdTime) :
                new ObjectParameter("CreatedTime", typeof(System.DateTime));
    
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("CourseId", courseId) :
                new ObjectParameter("CourseId", typeof(System.Guid));
    
            var flagParameter = flag.HasValue ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WEB_IMIC_SP_RegisterDetail_Update", registerDetailIdParameter, classIdParameter, registerPersonIdParameter, messageParameter, commentParameter, statusParameter, isSeenParameter, createdTimeParameter, courseIdParameter, flagParameter);
        }
    
        public virtual int WEB_IMIC_SP_RegisterDetail_UpdateIsSeen(Nullable<System.Guid> registerPersonId)
        {
            var registerPersonIdParameter = registerPersonId.HasValue ?
                new ObjectParameter("RegisterPersonId", registerPersonId) :
                new ObjectParameter("RegisterPersonId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("WEB_IMIC_SP_RegisterDetail_UpdateIsSeen", registerPersonIdParameter);
        }
    
        public virtual int SP_IMIC_RegisterDetail_Update_IsSeen()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_IMIC_RegisterDetail_Update_IsSeen");
        }
    }
}
